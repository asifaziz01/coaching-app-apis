{
	"info": {
		"_postman_id": "e099a53f-c07b-4ef8-9daa-a5c83615d348",
		"name": "API Reference",
		"description": "Testing APIs to be used by frontend team",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "15342249-e099a53f-c07b-4ef8-9daa-a5c83615d348"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Change/Create new Password",
					"item": [
						{
							"name": "Verify username",
							"id": "7b13b078-ab65-4595-80fd-f2aa1a77ec16",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "asifaziz01@gmail.com",
											"type": "text",
											"description": "Any one of the two is required. Mobile number (prefixed with country code)"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}auth/password/verify_username",
									"host": [
										"{{base_url}}auth"
									],
									"path": [
										"password",
										"verify_username"
									]
								}
							},
							"response": [
								{
									"id": "1d3ec685-99f6-419f-8721-f00ab01f5326",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "mobile",
													"value": "8896156256",
													"type": "text",
													"description": "Required. Mobile number (prefixed with country code)"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}reset_password/verify_username",
											"host": [
												"{{base_url}}reset_password"
											],
											"path": [
												"verify_username"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 16 Jan 2023 10:11:11 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "92"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"OTP_SENT\",\n    \"payload\": {\n        \"otp\": \"581637\"\n    }\n}"
								}
							]
						},
						{
							"name": "Verify OTP",
							"id": "61e86599-fd08-4464-9bcc-b4621615e380",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "asifaziz01@gmail.com",
											"type": "text",
											"description": "Required. Mobile number prefixed with country code"
										},
										{
											"key": "otp",
											"value": "039853",
											"description": "Required. OTP",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}auth/password/verify_otp",
									"host": [
										"{{base_url}}auth"
									],
									"path": [
										"password",
										"verify_otp"
									]
								}
							},
							"response": [
								{
									"id": "6695ecdf-9914-467d-acd1-95e68c1038ef",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "mobile",
													"value": "8896156256",
													"type": "text"
												},
												{
													"key": "otp",
													"value": "204739",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}reset_password/verify_otp",
											"host": [
												"{{base_url}}reset_password"
											],
											"path": [
												"verify_otp"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 16 Jan 2023 09:36:16 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "171"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"OTP_VERIFIED\",\n    \"payload\": {\n        \"token\": \"$2y$10$Y7RtTRtEjVRAmlVC7bQfzeq0q5dAaMIkBDi1pDg0/2Xvh.2cHt98e\"\n    }\n}"
								}
							]
						},
						{
							"name": "Change password",
							"id": "24789fa0-bb6c-4765-bc0c-bf206842f4a9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "asifaziz01@gmail.com",
											"description": "Required. Mobile number prefixed with country code",
											"type": "text"
										},
										{
											"key": "token",
											"value": "$2y$10$7GDkQTYps6gn9H2czzZ3mu9JLlIzHYjcWcofA/Y7E.sAJgmOHjmFC",
											"description": "Required. Token",
											"type": "text"
										},
										{
											"key": "password",
											"value": "DarkHorse@123",
											"type": "text",
											"description": "Required. New password"
										},
										{
											"key": "email",
											"value": "asifaziz01@gmail.com",
											"description": "Any one of the two fields username or email is required",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}auth/password/change",
									"host": [
										"{{base_url}}auth"
									],
									"path": [
										"password",
										"change"
									]
								}
							},
							"response": [
								{
									"id": "07671a7b-ba98-43b4-a8f2-d928aa6df353",
									"name": "SUCCESS",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "mobile",
													"value": "8896156256",
													"type": "text"
												},
												{
													"key": "token",
													"value": "$2y$10$Y7RtTRtEjVRAmlVC7bQfzeq0q5dAaMIkBDi1pDg0/2Xvh.2cHt98e",
													"type": "text"
												},
												{
													"key": "password",
													"value": "Test@1234",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}reset_password/change_password",
											"host": [
												"{{base_url}}reset_password"
											],
											"path": [
												"change_password"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 16 Jan 2023 10:07:55 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "96"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"PASSWORD_CHANGED_SUCCESSFULLY\",\n    \"payload\": []\n}"
								}
							]
						}
					],
					"id": "71b84896-d1d2-4efa-801c-7b0eb5f4c27c"
				},
				{
					"name": "Login",
					"id": "b6a69ac0-1dec-4443-84b6-b891803c49c2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "asifaziz01@gmail.com",
									"type": "text",
									"disabled": true
								},
								{
									"key": "username",
									"value": "asifaziz@inovexiasoftware.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "DarkHorse@1234",
									"type": "text"
								},
								{
									"key": "device_name",
									"value": "Admin Phone",
									"description": "The device name can be any arbitrary string, but is typically used to identify the device the request is being made from.",
									"type": "text"
								},
								{
									"key": "password",
									"value": "DeltaForce2.0",
									"type": "text",
									"disabled": true
								},
								{
									"key": "device_name",
									"value": "RSR1.201013.001",
									"type": "text",
									"disabled": true
								},
								{
									"key": "email",
									"value": "asifaziz01@gmail.com",
									"type": "text",
									"disabled": true
								},
								{
									"key": "password",
									"value": "DeltaForce2.0",
									"type": "text",
									"disabled": true
								},
								{
									"key": "device_name",
									"value": "Asif's phone",
									"type": "text",
									"disabled": true
								},
								{
									"key": "mobile",
									"value": "918896156356",
									"type": "text",
									"disabled": true
								},
								{
									"key": "email",
									"value": "joe.smith@example.com",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{base_url}}auth/login",
							"host": [
								"{{base_url}}auth"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"id": "3d827a0b-0ba0-405b-8cc8-ffbc5ef82002",
							"name": "Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "asifaziz01@gmail.com",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Abcd@12345",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}login",
									"host": [
										"{{base_url}}login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 10 Jan 2023 12:46:34 GMT"
								},
								{
									"key": "Server",
									"value": "Apache"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/7.4.33"
								},
								{
									"key": "Expires",
									"value": "Thu, 19 Nov 1981 08:52:00 GMT"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, no-store, max-age=0, no-cache"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "ci_session=2e96cd78ed1c8b0b47b85533ed5c2ac0851faadb; expires=Tue, 10-Jan-2023 14:46:35 GMT; Max-Age=7200; path=/; HttpOnly; SameSite=Lax"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Upgrade",
									"value": "h2,h2c"
								},
								{
									"key": "Connection",
									"value": "Upgrade, Keep-Alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Content-Length",
									"value": "81"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=3, max=500"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"messages\": \"INVALID_LOGIN\",\n    \"payload\": []\n}"
						},
						{
							"id": "81fd1b50-ea26-4251-8053-2ece3c0e5559",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "asifaziz01@gmail.com",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Abcd@1234",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}login",
									"host": [
										"{{base_url}}login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 10 Jan 2023 12:46:54 GMT"
								},
								{
									"key": "Server",
									"value": "Apache"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/7.4.33"
								},
								{
									"key": "Expires",
									"value": "Thu, 19 Nov 1981 08:52:00 GMT"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, no-store, max-age=0, no-cache"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "ci_session=a18ba71ca99802074f0ae6512e734b13130eca67; expires=Tue, 10-Jan-2023 14:46:54 GMT; Max-Age=7200; path=/; HttpOnly; SameSite=Lax"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Upgrade",
									"value": "h2,h2c"
								},
								{
									"key": "Connection",
									"value": "Upgrade, Keep-Alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Content-Length",
									"value": "157"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=3, max=500"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"LOGIN_SUCCESSFULL\",\n    \"payload\": {\n        \"token\": \"32d4f2cf5c0d5ae81047f782fd57afc9b40e682c26ad68abcede8f2e4d2584b0\"\n    }\n}"
						},
						{
							"id": "46aa11d6-ca68-4f4f-b680-f8169211d397",
							"name": "Login",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "919511118898",
											"type": "text"
										},
										{
											"key": "password",
											"value": "DeltaForce2.0",
											"type": "text"
										},
										{
											"key": "device_name",
											"value": "Admin Phone",
											"description": "The device name can be any arbitrary string, but is typically used to identify the device the request is being made from.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}auth/login",
									"host": [
										"{{base_url}}auth"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 31 Mar 2023 13:28:40 GMT"
								},
								{
									"key": "Server",
									"value": "Apache"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.28"
								},
								{
									"key": "Expires",
									"value": "Thu, 19 Nov 1981 08:52:00 GMT"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, no-store, max-age=0, no-cache"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "ci_session=65a88d8d1e1471a7cbc3d3a1244a2946357ab9e1; expires=Fri, 31-Mar-2023 15:28:40 GMT; Max-Age=7200; path=/; HttpOnly; SameSite=Lax"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Upgrade",
									"value": "h2,h2c"
								},
								{
									"key": "Connection",
									"value": "Upgrade, Keep-Alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Content-Length",
									"value": "158"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=3, max=500"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"LOGIN_SUCCESSFULL\",\n    \"payload\": {\n        \"token\": \"feba20dcfdf5454989f74363a02118c9e1f3f7ab4e6a4172649c3cebc883d1d6\"\n    }\n}"
						}
					]
				},
				{
					"name": "Register",
					"id": "378b2b28-b661-44b6-af13-1727f5c4d14b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {
							"accept-encoding": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "ur1xwh2",
									"type": "text",
									"description": "Required through setting. Otherwise not need",
									"disabled": true
								},
								{
									"key": "mobile",
									"value": "918896156156",
									"description": "Required through setting. Valid mobile number.[0-9] Natural numbers only",
									"type": "text"
								},
								{
									"key": "email",
									"value": "asifaziz02@gmail.com",
									"type": "text",
									"description": "Required through setting. Valid email address"
								},
								{
									"key": "password",
									"value": "Deltaforce@2.0",
									"type": "text",
									"description": "Required. Min length 8. Alphanumeric with special characters"
								},
								{
									"key": "first_name",
									"value": "Asif",
									"type": "text",
									"description": "Optional"
								},
								{
									"key": "middle_name",
									"value": "M",
									"type": "text",
									"description": "Optional"
								},
								{
									"key": "last_name",
									"value": "Aziz",
									"type": "text",
									"description": "Optional"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}auth/register",
							"host": [
								"{{base_url}}auth"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"id": "590f332f-d7f6-414a-bd84-b22129e3ba81",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "9876543210",
									"type": "text"
								},
								{
									"key": "password",
									"value": "DeltaForce2.0",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}auth/logout",
							"host": [
								"{{base_url}}auth"
							],
							"path": [
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get token details",
					"id": "7f010585-1755-4b21-8959-74920462371b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}users/token_details",
							"host": [
								"{{base_url}}users"
							],
							"path": [
								"token_details"
							]
						}
					},
					"response": []
				}
			],
			"id": "9ad3fbe6-4384-4cdf-89b7-285d7c0d679a"
		},
		{
			"name": "Filemanager",
			"item": [
				{
					"name": "Upload file",
					"id": "c0fd7dac-e0b0-48a7-b97e-7ba7c3c41319",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "userfile",
									"type": "file",
									"src": "/C:/Users/d_asi/Downloads/MWS Brand Logos and mofifications.pdf"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}files/upload",
							"host": [
								"{{base_url}}files"
							],
							"path": [
								"upload"
							]
						}
					},
					"response": []
				}
			],
			"id": "a733a555-0f76-4c0d-b0d5-b6aa646c0b1d"
		},
		{
			"name": "Courses",
			"item": [
				{
					"name": "Course categories",
					"item": [
						{
							"name": "Create new course category",
							"id": "78b7bdd7-6b14-469c-b265-a7c7fe95eab5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "English Lesson New",
											"type": "text"
										},
										{
											"key": "created_by",
											"value": "UR2",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}course/create_category",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"create_category"
									]
								}
							},
							"response": []
						}
					],
					"id": "1d13eb15-8351-489a-b8af-f8b469e156c2"
				},
				{
					"name": "Course Shell",
					"item": [
						{
							"name": "Get courses",
							"id": "999fc754-3f5e-4d68-85da-8389ffb26ba9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}course/list",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"list"
									]
								}
							},
							"response": [
								{
									"id": "77cf5c33-7801-4226-b0a7-a87649e8b671",
									"name": "Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}course/list",
											"host": [
												"{{base_url}}course"
											],
											"path": [
												"list"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 24 Jan 2023 11:48:13 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "268"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"COURSES_FOUND\",\n    \"payload\": {\n        \"meta\": {\n            \"first_page\": 1,\n            \"last_page\": 1,\n            \"current_page\": 1,\n            \"num_results\": 1,\n            \"total_results\": 1\n        },\n        \"data\": [\n            {\n                \"guid\": \"CS00001\",\n                \"title\": \"A new course\",\n                \"description\": \"Some description\",\n                \"status\": \"0\",\n                \"created_by\": \"CA000019\",\n                \"created_on\": \"2023-01-24 05:28:55\",\n                \"updated_by\": \"CA000019\",\n                \"updated_on\": \"2023-01-24 05:47:18\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Search and filter courses",
							"id": "0e35733e-e4a0-4d08-8ad5-68ea785990e9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "results_per_page",
											"value": "2",
											"type": "text",
											"disabled": true
										},
										{
											"key": "search",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "order_by",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "page",
											"value": "2",
											"type": "text",
											"disabled": true
										},
										{
											"key": "status",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}course/list",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"list"
									]
								}
							},
							"response": [
								{
									"id": "171c2d9a-573e-4893-8a93-98eac36ca7b8",
									"name": "Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}course/list",
											"host": [
												"{{base_url}}course"
											],
											"path": [
												"list"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 24 Jan 2023 11:48:13 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "268"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"COURSES_FOUND\",\n    \"payload\": {\n        \"meta\": {\n            \"first_page\": 1,\n            \"last_page\": 1,\n            \"current_page\": 1,\n            \"num_results\": 1,\n            \"total_results\": 1\n        },\n        \"data\": [\n            {\n                \"guid\": \"CS00001\",\n                \"title\": \"A new course\",\n                \"description\": \"Some description\",\n                \"status\": \"0\",\n                \"created_by\": \"CA000019\",\n                \"created_on\": \"2023-01-24 05:28:55\",\n                \"updated_by\": \"CA000019\",\n                \"updated_on\": \"2023-01-24 05:47:18\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "View course",
							"id": "9fcc30b0-23e8-40e8-a46c-3168e28713c3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}course/view/LEV2",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"view",
										"LEV2"
									]
								}
							},
							"response": [
								{
									"id": "2cd19734-fc04-4fd2-b593-b9432cb46d51",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}course/view/CS00001",
											"host": [
												"{{base_url}}course"
											],
											"path": [
												"view",
												"CS00001"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 25 Jan 2023 04:53:10 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "207"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"COURSE_FOUND\",\n    \"payload\": {\n        \"course_id\": \"1\",\n        \"guid\": \"CS00001\",\n        \"title\": \"A new course\",\n        \"description\": \"Some description\",\n        \"status\": \"0\",\n        \"created_by\": \"CA000019\",\n        \"created_on\": \"2023-01-24 05:28:55\",\n        \"updated_by\": \"CA000019\",\n        \"updated_on\": \"2023-01-24 05:47:18\"\n    }\n}"
								}
							]
						},
						{
							"name": "Create course",
							"id": "ab37f763-741e-4293-9c2c-76e8f5c046a5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "PHP Tutorial 2",
											"description": "Required. Alpha numeric and some special chars allowed",
											"type": "text"
										},
										{
											"key": "description",
											"value": "PHP is a server scripting language, and a powerful tool for making dynamic and interactive Web pages.\n\nPHP is a widely-used, free, and efficient alternative to competitors such as Microsoft's ASP.",
											"description": "Optional. String allowed",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}course/create",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"create"
									]
								}
							},
							"response": [
								{
									"id": "c8ced599-6538-4653-af13-37409e2a2de7",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "title",
													"value": "A new course",
													"type": "text"
												},
												{
													"key": "description",
													"value": "",
													"type": "text"
												},
												{
													"key": "status",
													"value": "0",
													"type": "text"
												},
												{
													"key": "created_by",
													"value": "CA000019",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}course/create",
											"host": [
												"{{base_url}}course"
											],
											"path": [
												"create"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 24 Jan 2023 11:28:55 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "111"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"COURSE_CREATED_SUCCESSFULLY\",\n    \"payload\": {\n        \"guid\": \"CS00001\"\n    }\n}"
								}
							]
						},
						{
							"name": "Update course",
							"id": "b123fb82-6b32-4b83-b441-ca1943da5c4e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "JavaScript Tutorial",
											"type": "text",
											"description": "Required. Alpha numeric and some special chars allowed"
										},
										{
											"key": "description",
											"value": "JavaScript is the world's most popular programming language.\n\nJavaScript is the programming language of the Web.\n\nJavaScript is easy to learn.\n\nThis tutorial will teach you JavaScript from basic to advanced.",
											"type": "text",
											"description": "Optional. String allowed"
										},
										{
											"key": "status",
											"value": "0",
											"type": "text",
											"description": "Required. 0 (Unpublished), 1 (Published), 2 (Archive)"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}course/update/LEV2",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"update",
										"LEV2"
									]
								}
							},
							"response": [
								{
									"id": "ccf68be1-cb47-4ba0-ae4e-9a95012a85d0",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "title",
													"value": "A new course",
													"type": "text"
												},
												{
													"key": "description",
													"value": "Some description",
													"type": "text"
												},
												{
													"key": "status",
													"value": "0",
													"type": "text"
												},
												{
													"key": "updated_by",
													"value": "CA000019",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}course/update/CS00001",
											"host": [
												"{{base_url}}course"
											],
											"path": [
												"update",
												"CS00001"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 24 Jan 2023 11:47:18 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "111"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"COURSE_UPDATED_SUCCESSFULLY\",\n    \"payload\": {\n        \"guid\": \"CS00001\"\n    }\n}"
								}
							]
						},
						{
							"name": "Set status",
							"id": "14c8786b-b04c-4836-bc9c-d799155e0d46",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "status",
											"value": "1",
											"type": "text",
											"description": "Required. 0 (Unpublished), 1 (Published), 2 (Archive)"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}course/status/LEV2",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"status",
										"LEV2"
									]
								}
							},
							"response": [
								{
									"id": "f8b9d988-e84f-42f6-878d-21daf286892d",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "status",
													"value": "2",
													"type": "text"
												},
												{
													"key": "updated_by",
													"value": "CS00001",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}course/status/CS00001",
											"host": [
												"{{base_url}}course"
											],
											"path": [
												"status",
												"CS00001"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 25 Jan 2023 05:00:52 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "99"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"STATUS_UPDATED\",\n    \"payload\": {\n        \"guid\": \"CS00001\"\n    }\n}"
								}
							]
						},
						{
							"name": "Delete course",
							"id": "d8fbc0c8-8e27-4478-92d7-798906e01fb6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}course/delete/LEV2",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"delete",
										"LEV2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Preview course",
							"id": "113be360-5df7-4e91-af3c-4b25aebd2544",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{base_url}}course/preview/LEV2",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"preview",
										"LEV2"
									]
								}
							},
							"response": []
						}
					],
					"id": "cf19a357-cdbe-4945-8c85-c8e50dc67b15"
				},
				{
					"name": "Subjects",
					"item": [
						{
							"name": "Create subject in a course",
							"id": "fd55a8d9-9e92-4983-a260-b5e8c3ff1c1d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "PHP Operators",
											"type": "text"
										},
										{
											"key": "description",
											"value": "New",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}course/PHP6/subject/create",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"PHP6",
										"subject",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit subject",
							"id": "cf21a2fc-347b-47c6-ac0d-6b7833999035",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "PHP Operators3",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}course/subject/PHP24/edit",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"subject",
										"PHP24",
										"edit"
									]
								}
							},
							"response": []
						},
						{
							"name": "List all subjects in a course",
							"id": "2a0715d5-36dc-4fe4-84c3-fa962b6de7f9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{base_url}}course/PHP6/subjects",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"PHP6",
										"subjects"
									]
								}
							},
							"response": []
						},
						{
							"name": "Publish/Unpublish subject",
							"id": "2fcce5c0-9db7-44b0-a1f3-204537bcc350",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "status",
											"value": "1",
											"description": "0=Unpublished, 1=Publish",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}course/subject/PHP24/change_status",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"subject",
										"PHP24",
										"change_status"
									]
								}
							},
							"response": []
						},
						{
							"name": "View subject",
							"id": "18fca0d0-f1f2-4397-8871-68b5c597a909",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{base_url}}course/subject/PHP24/view",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"subject",
										"PHP24",
										"view"
									]
								}
							},
							"response": []
						},
						{
							"name": "Preview subject",
							"id": "3f158cb6-b6b7-4b1e-959f-39a69a150a32",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{base_url}}course/subject/PHP24/preview",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"subject",
										"PHP24",
										"preview"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete subject permanently",
							"id": "768336a3-835a-476e-855b-b845de826f9f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}course/subject/PHP23/delete",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"subject",
										"PHP23",
										"delete"
									]
								}
							},
							"response": []
						}
					],
					"id": "16e320d8-963c-4238-899a-33b800339784"
				},
				{
					"name": "Lessons",
					"item": [
						{
							"name": "Search and filter lessons in a subject",
							"id": "f82c7f0c-c372-4bf6-8c88-6d722489b4e1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "status",
											"value": "",
											"type": "text",
											"description": "Optional. The status field must be one of: 0,1,2.",
											"disabled": true
										},
										{
											"key": "search",
											"value": "",
											"type": "text",
											"description": "Optional. Any string value",
											"disabled": true
										},
										{
											"key": "results_per_page",
											"value": "",
											"type": "text",
											"description": "Optional. The results_per_page field must only contain digits and must be greater than zero.",
											"disabled": true
										},
										{
											"key": "page",
											"value": "",
											"type": "text",
											"description": "Optional. The page field must only contain digits and must be greater than zero.",
											"disabled": true
										},
										{
											"key": "order_by",
											"value": "",
											"type": "text",
											"description": "Optional. If present, this field must be one of: [title_asc, title_desc, newest_first, newest_last]",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}course/subject/PHP24/lessons",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"subject",
										"PHP24",
										"lessons"
									]
								}
							},
							"response": [
								{
									"id": "d21592db-1cfc-4761-94ef-d59b484b43db",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "status",
													"value": "",
													"type": "text",
													"description": "Optional. The status field must be one of: 0,1,2.",
													"disabled": true
												},
												{
													"key": "search",
													"value": "",
													"type": "text",
													"description": "Optional. Any string value",
													"disabled": true
												},
												{
													"key": "results_per_page",
													"value": "",
													"type": "text",
													"description": "Optional. The results_per_page field must only contain digits and must be greater than zero.",
													"disabled": true
												},
												{
													"key": "page",
													"value": "",
													"type": "text",
													"description": "Optional. The page field must only contain digits and must be greater than zero.",
													"disabled": true
												},
												{
													"key": "order_by",
													"value": "",
													"type": "text",
													"description": "Optional. If present, this field must be one of: [title_asc, title_desc, newest_first, newest_last]",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{base_url}}course/subject/PHP24/lessons",
											"host": [
												"{{base_url}}course"
											],
											"path": [
												"subject",
												"PHP24",
												"lessons"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 19 Sep 2023 15:49:20 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/8.0.30"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-Control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "405"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"LESSONS_FOUND\",\n    \"payload\": {\n        \"meta\": {\n            \"first_page\": 1,\n            \"last_page\": 1,\n            \"current_page\": 1,\n            \"num_results\": 2,\n            \"total_results\": 2\n        },\n        \"data\": [\n            {\n                \"guid\": \"BAS19\",\n                \"title\": \"basic php\",\n                \"description\": \"\",\n                \"status\": \"0\",\n                \"created_on\": \"2023-09-19 04:14:57\",\n                \"created_by\": \"UR1\",\n                \"updated_on\": \"2023-09-19 04:14:57\",\n                \"updated_by\": \"UR1\"\n            },\n            {\n                \"guid\": \"PHP22\",\n                \"title\": \"HTML Introduction\",\n                \"description\": \"HTML is the standard markup language for Web pages.\\n\\nWith HTML you can create your own Website.\\n\\nHTML is easy to learn - You will enjoy it!\",\n                \"status\": \"0\",\n                \"created_on\": \"2023-09-19 08:22:12\",\n                \"created_by\": \"ASI29\",\n                \"updated_on\": \"2023-09-19 15:49:01\",\n                \"updated_by\": \"ASI29\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Create lesson in a subject",
							"id": "512dba62-9a97-4e47-8294-af6748e609fd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "PHP Introduction",
											"description": "Required. Alpha numeric and some special chars allowed",
											"type": "text"
										},
										{
											"key": "description",
											"value": "An HTML element is defined by a start tag, some content, and an end tag.\n",
											"description": "Optional. String allowed",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}course/subject/PHP24/lesson/create",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"subject",
										"PHP24",
										"lesson",
										"create"
									]
								}
							},
							"response": [
								{
									"id": "ff14903f-df91-494f-8a4d-744e38f6e8f8",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "title",
													"value": "A new lesson",
													"description": "Required. Alpha numeric and some special chars allowed",
													"type": "text"
												},
												{
													"key": "description",
													"value": "",
													"description": "Optional. String allowed",
													"type": "text"
												},
												{
													"key": "status",
													"value": "0",
													"description": "Required. 0 (Unpublished), 1 (Published), 2 (Archive)",
													"type": "text"
												},
												{
													"key": "created_by",
													"value": "CA000019",
													"description": "User GUID",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}lesson/create",
											"host": [
												"{{base_url}}lesson"
											],
											"path": [
												"create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 25 Jan 2023 10:23:43 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "111"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"LESSON_CREATED_SUCCESSFULLY\",\n    \"payload\": {\n        \"guid\": \"LP20233\"\n    }\n}"
								}
							]
						},
						{
							"name": "Edit lesson",
							"id": "3be1a448-d1ea-426a-9d31-8c4e21d7adb0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "HTML Introduction",
											"description": "Required. Alpha numeric and some special chars allowed",
											"type": "text"
										},
										{
											"key": "description",
											"value": "HTML is the standard markup language for Web pages.\n\nWith HTML you can create your own Website.\n\nHTML is easy to learn - You will enjoy it!",
											"description": "Optional. String allowed",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}course/lesson/PHP22/edit",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"lesson",
										"PHP22",
										"edit"
									]
								}
							},
							"response": [
								{
									"id": "e4e9525b-1e84-4a1e-a3c2-00f229bafe59",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "title",
													"value": "HTML Introduction",
													"description": "Required. Alpha numeric and some special chars allowed",
													"type": "text"
												},
												{
													"key": "description",
													"value": "HTML is the standard markup language for Web pages.\n\nWith HTML you can create your own Website.\n\nHTML is easy to learn - You will enjoy it!",
													"description": "Optional. String allowed",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}course/lesson/PHP22/edit",
											"host": [
												"{{base_url}}course"
											],
											"path": [
												"lesson",
												"PHP22",
												"edit"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 19 Sep 2023 15:49:00 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/8.0.30"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-Control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "110"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"LESSON_UPDATED_SUCCESSFULLY\",\n    \"payload\": {\n        \"guid\": \"PHP22\"\n    }\n}"
								}
							]
						},
						{
							"name": "View lesson",
							"id": "e5778053-e90d-4656-9033-ffef2cff7c78",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{base_url}}course/lesson/PHP22/view",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"lesson",
										"PHP22",
										"view"
									]
								}
							},
							"response": [
								{
									"id": "e0a6ac1b-b20f-4452-95a8-14f3d667088a",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{base_url}}course/lesson/PHP22/view",
											"host": [
												"{{base_url}}course"
											],
											"path": [
												"lesson",
												"PHP22",
												"view"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 19 Sep 2023 15:48:20 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/8.0.30"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-Control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "293"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"LESSON_FOUND\",\n    \"payload\": {\n        \"guid\": \"PHP22\",\n        \"title\": \"HTML Introduction\",\n        \"description\": \"HTML is the standard markup language for Web pages.\\n\\nWith HTML you can create your own Website.\\n\\nHTML is easy to learn - You will enjoy it!\",\n        \"status\": \"1\",\n        \"created_by\": \"ASI29\",\n        \"created_on\": \"2023-09-19 08:22:12\",\n        \"updated_by\": \"ASI29\",\n        \"updated_on\": \"2023-09-19 15:47:46\"\n    }\n}"
								}
							]
						},
						{
							"name": "Publish/Unpublish lesson",
							"id": "daa7a85a-9dc5-4d31-8e98-312551378194",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "status",
											"value": "1",
											"type": "text",
											"description": "Required. 0 (Unpublished), 1 (Published), 2 (Archive)"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}course/lesson/PHP22/change_status",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"lesson",
										"PHP22",
										"change_status"
									]
								}
							},
							"response": [
								{
									"id": "17e29e3a-8df1-48c3-97cd-711cccd43f9d",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "status",
													"value": "1",
													"type": "text",
													"description": "Required. 0 (Unpublished), 1 (Published), 2 (Archive)"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}course/lesson/PHP22/change_status",
											"host": [
												"{{base_url}}course"
											],
											"path": [
												"lesson",
												"PHP22",
												"change_status"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 19 Sep 2023 15:47:46 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/8.0.30"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-Control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "98"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"STATUS_UPDATED\",\n    \"payload\": {\n        \"guid\": \"PHP22\"\n    }\n}"
								}
							]
						},
						{
							"name": "Preview lesson",
							"id": "aee7c2e7-2d32-4239-a251-416e25270bfa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{base_url}}course/lesson/PHP22/preview",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"lesson",
										"PHP22",
										"preview"
									]
								}
							},
							"response": [
								{
									"id": "f2af8c1e-3ed2-48ef-91e1-0090223c5323",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{base_url}}course/lesson/PHP22/preview",
											"host": [
												"{{base_url}}course"
											],
											"path": [
												"lesson",
												"PHP22",
												"preview"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 19 Sep 2023 15:47:12 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/8.0.30"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-Control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "376"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"LESSON_FOUND\",\n    \"payload\": {\n        \"guid\": \"PHP22\",\n        \"title\": \"HTML Introduction\",\n        \"description\": \"HTML is the standard markup language for Web pages.\\n\\nWith HTML you can create your own Website.\\n\\nHTML is easy to learn - You will enjoy it!\",\n        \"status\": \"1\",\n        \"created_by\": \"ASI29\",\n        \"created_on\": \"2023-09-19 08:22:12\",\n        \"updated_by\": \"ASI29\",\n        \"updated_on\": \"2023-09-19 09:02:49\",\n        \"sections\": [\n            {\n                \"guid\": \"PHP5\",\n                \"title\": \"PHP Introduction2\",\n                \"created_by\": \"ASI29\",\n                \"created_on\": \"2023-09-19 10:06:37\",\n                \"updated_by\": \"ASI29\",\n                \"updated_on\": \"2023-09-19 11:31:17\"\n            },\n            {\n                \"guid\": \"PHP6\",\n                \"title\": \"PHP Introduction 2\",\n                \"created_by\": \"ASI29\",\n                \"created_on\": \"2023-09-19 15:45:56\",\n                \"updated_by\": \"ASI29\",\n                \"updated_on\": \"2023-09-19 15:45:56\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Delete lesson permanently",
							"id": "56861a27-7e3a-4804-b1d3-eb1666a47415",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}course/lesson/PHP21/delete",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"lesson",
										"PHP21",
										"delete"
									]
								}
							},
							"response": [
								{
									"id": "3aa5128b-1d33-4178-8b65-fe94df94209e",
									"name": "Failure",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{base_url}}course/lesson/PHP21/delete",
											"host": [
												"{{base_url}}course"
											],
											"path": [
												"lesson",
												"PHP21",
												"delete"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 19 Sep 2023 15:47:56 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/8.0.30"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-Control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "84"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"message\": \"LESSON_NOT_FOUND\",\n    \"payload\": []\n}"
								}
							]
						}
					],
					"id": "29d573cd-d526-4843-bde2-e1e30e93cac9"
				},
				{
					"name": "Sections",
					"item": [
						{
							"name": "Create section in lesson",
							"id": "a74bcc1b-e0df-4ec5-8785-f0c334f534dc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "PHP Introduction 3",
											"description": "Required. Will provide the type of content being added. Accepted values are [html, file, link]. Default value is html",
											"type": "text"
										},
										{
											"key": "block[0][type]",
											"value": "html",
											"type": "text",
											"disabled": true
										},
										{
											"key": "block[0][content]",
											"value": "html asasg asjhass",
											"type": "text",
											"disabled": true
										},
										{
											"key": "block[1][type]",
											"value": "file",
											"type": "text",
											"disabled": true
										},
										{
											"key": "block[1][content]",
											"type": "file",
											"value": null,
											"disabled": true
										},
										{
											"key": "block[2][type]",
											"value": "link",
											"type": "text",
											"disabled": true
										},
										{
											"key": "block[2][content]",
											"value": "https://www.youtube.com",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}course/lesson/PHP22/section/create",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"lesson",
										"PHP22",
										"section",
										"create"
									]
								}
							},
							"response": [
								{
									"id": "dd3bb7e4-4d0c-4582-bff5-a7998a55f3e8",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "title",
													"value": "PHP Introduction 2",
													"description": "Required. Will provide the type of content being added. Accepted values are [html, file, link]. Default value is html",
													"type": "text"
												},
												{
													"key": "block[0][type]",
													"value": "html",
													"type": "text",
													"disabled": true
												},
												{
													"key": "block[0][content]",
													"value": "html asasg asjhass",
													"type": "text",
													"disabled": true
												},
												{
													"key": "block[1][type]",
													"value": "file",
													"type": "text",
													"disabled": true
												},
												{
													"key": "block[1][content]",
													"type": "file",
													"src": [],
													"disabled": true
												},
												{
													"key": "block[2][type]",
													"value": "link",
													"type": "text",
													"disabled": true
												},
												{
													"key": "block[2][content]",
													"value": "https://www.youtube.com",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{base_url}}course/lesson/PHP22/section/create",
											"host": [
												"{{base_url}}course"
											],
											"path": [
												"lesson",
												"PHP22",
												"section",
												"create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 19 Sep 2023 15:45:56 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/8.0.30"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-Control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "111"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"SECTION_CREATED_SUCCESSFULLY\",\n    \"payload\": {\n        \"guid\": \"PHP6\"\n    }\n}"
								}
							]
						},
						{
							"name": "Get sections in a lesson",
							"id": "022055b9-d728-4be9-8d13-ed15d462c801",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{base_url}}course/lesson/PHP22/sections",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"lesson",
										"PHP22",
										"sections"
									]
								}
							},
							"response": [
								{
									"id": "8c33e802-b675-4713-b0b4-5f89edcc6e02",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{base_url}}course/lesson/PHP22/sections",
											"host": [
												"{{base_url}}course"
											],
											"path": [
												"lesson",
												"PHP22",
												"sections"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 19 Sep 2023 15:46:08 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/8.0.30"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-Control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "219"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"SECTIONS_FOUND\",\n    \"payload\": [\n        {\n            \"guid\": \"PHP5\",\n            \"title\": \"PHP Introduction2\",\n            \"created_by\": \"ASI29\",\n            \"created_on\": \"2023-09-19 10:06:37\",\n            \"updated_by\": \"ASI29\",\n            \"updated_on\": \"2023-09-19 11:31:17\"\n        },\n        {\n            \"guid\": \"PHP6\",\n            \"title\": \"PHP Introduction 2\",\n            \"created_by\": \"ASI29\",\n            \"created_on\": \"2023-09-19 15:45:56\",\n            \"updated_by\": \"ASI29\",\n            \"updated_on\": \"2023-09-19 15:45:56\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Edit section",
							"id": "18a0e91a-0787-4ef4-96bc-cc7cb883dd4e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "PHP Introduction 7",
											"description": "Required. Will provide the type of content being added. Accepted values are [html, file, link]. Default value is html",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}course/section/PHP7/edit",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"section",
										"PHP7",
										"edit"
									]
								}
							},
							"response": []
						},
						{
							"name": "View section",
							"id": "a3b08f20-d280-4172-92a7-286a185bf93f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{base_url}}course/section/PHP7/view",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"section",
										"PHP7",
										"view"
									]
								}
							},
							"response": []
						},
						{
							"name": "Preview section",
							"id": "8fe0c081-c849-4fe4-b026-51ff5840951b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{base_url}}course/section/PHP6/preview",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"section",
										"PHP6",
										"preview"
									]
								}
							},
							"response": []
						},
						{
							"name": "Publish/Unpublish section",
							"id": "be12e25e-b838-45fb-aea2-0cafc60fdf72",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "status",
											"value": "1",
											"description": "Required. 0 (Unpublished), 1 (Published), 2 (Archive)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}course/section/PHP7/change_status",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"section",
										"PHP7",
										"change_status"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete section permanently",
							"id": "3acba4f9-66f1-4c8a-81f4-7f357fe80b7f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}course/section/PHP7/delete",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"section",
										"PHP7",
										"delete"
									]
								}
							},
							"response": []
						}
					],
					"id": "f1e0ccc8-5650-4349-b531-d02aee6f4c0d"
				},
				{
					"name": "Content",
					"item": [
						{
							"name": "Create content in a section",
							"id": "5e154928-eb5d-4ad7-a07e-143b76a502d2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "type",
											"value": "html",
											"description": "Required. Will provide the type of content being added. Accepted values are [html, image, video, pdf, file, youtube, link]. Default value is html",
											"type": "text",
											"disabled": true
										},
										{
											"key": "content",
											"value": "HTML Elements4\nThe HTML element is everything from the start tag to the end tag:\n\n<tagname>Content goes here...</tagname>\nExamples of some HTML elements:\n\n<h1>My First Heading</h1>\n<p>My first paragraph.</p>\nStart tag\tElement content\tEnd tag\n<h1>\tMy First Heading\t</h1>\n<p>\tMy first paragraph.\t</p>\n<br>\tnone\tnone",
											"description": "Required. Actual content. Content can be html, full path for audio/video/pdf/other files or links for youtube videos",
											"type": "text",
											"disabled": true
										},
										{
											"key": "type",
											"value": "image",
											"type": "text",
											"disabled": true
										},
										{
											"key": "userfile",
											"type": "file",
											"fileNotInWorkingDirectoryWarning": "This file isn't in your working directory. Teammates you share this request with won't be able to use this file. To make collaboration easier you can setup your working directory in Settings.",
											"src": "/F:/Download/Project Files/Coaching App/QA6/paralelogram.jpg",
											"disabled": true
										},
										{
											"key": "type",
											"value": "pdf",
											"type": "text"
										},
										{
											"key": "userfile",
											"type": "file",
											"src": "/F:/Download/GTmetrix-report-canadianinsulin.com-20220627T101033-51PY5FMn.pdf"
										},
										{
											"key": "type",
											"value": "video",
											"type": "text",
											"disabled": true
										},
										{
											"key": "userfile",
											"type": "file",
											"value": null,
											"disabled": true
										},
										{
											"key": "type",
											"value": "youtube",
											"type": "text",
											"disabled": true
										},
										{
											"key": "content",
											"value": "https://www.youtube.com/watch?v=eMIxuk0nOkU",
											"type": "text",
											"disabled": true
										},
										{
											"key": "type",
											"value": "link",
											"type": "text",
											"disabled": true
										},
										{
											"key": "conent",
											"value": "https://inovexiasoftware.com",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}course/section/PHP6/content/create",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"section",
										"PHP6",
										"content",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit content/Replace file",
							"id": "4c291667-59d2-47c9-af88-40f50680feb4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "content",
											"value": "HTML Elements2\nThe HTML element is everything from the start tag to the end tag:\n\n<tagname>Content goes here...</tagname>\nExamples of some HTML elements:\n\n<h1>My First Heading</h1>\n<p>My first paragraph.</p>\nStart tag\tElement content\tEnd tag\n<h1>\tMy First Heading\t</h1>\n<p>\tMy first paragraph.\t</p>\n<br>\tnone\tnone\n",
											"description": "Required. Actual content. Content can be html, full path for audio/video/pdf/other files or links for youtube videos",
											"type": "text",
											"disabled": true
										},
										{
											"key": "userfile",
											"type": "file",
											"src": "/F:/Download/medicaldepot.pdf"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}course/content/GTM13/edit",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"content",
										"GTM13",
										"edit"
									]
								}
							},
							"response": []
						},
						{
							"name": "View content/Get file url",
							"id": "371b223d-f319-44e1-a956-4c99e8fcfb9d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{base_url}}course/content/GTM13/view",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"content",
										"GTM13",
										"view"
									]
								}
							},
							"response": []
						},
						{
							"name": "Arrange content",
							"id": "41c2838a-8ef8-4a39-bb6b-c17ec578d63f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "content[72]",
											"value": "1",
											"type": "text"
										},
										{
											"key": "content[73]",
											"value": "2",
											"type": "text"
										},
										{
											"key": "content[74]",
											"value": "3",
											"type": "text"
										},
										{
											"key": "content[75]",
											"value": "4",
											"type": "text"
										},
										{
											"key": "content[76]",
											"value": "5",
											"type": "text"
										},
										{
											"key": "content[77]",
											"value": "6",
											"type": "text"
										},
										{
											"key": "content[78]",
											"value": "7",
											"type": "text"
										},
										{
											"key": "content[79]",
											"value": "8",
											"type": "text"
										},
										{
											"key": "updated_by",
											"value": "CA00001",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}lesson/content/arrange/3",
									"host": [
										"{{base_url}}lesson"
									],
									"path": [
										"content",
										"arrange",
										"3"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete content/Delete file",
							"id": "86e7966c-ac94-424c-b4e0-88e9c35cbb1e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}lesson/content/delete/66",
									"host": [
										"{{base_url}}lesson"
									],
									"path": [
										"content",
										"delete",
										"66"
									]
								}
							},
							"response": []
						}
					],
					"id": "16d2b765-9cc6-432d-bb86-8db221502c9f"
				},
				{
					"name": "Tests",
					"item": [
						{
							"name": "Add existing test to a course",
							"id": "49f49f6d-46b5-4d26-b8ee-44a4d394be6d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "tests[0][guid]",
											"value": "TS84",
											"type": "text"
										},
										{
											"key": "tests[0][start_date]",
											"value": "2023-06-23 09:00:00",
											"type": "text"
										},
										{
											"key": "tests[0][end_date]",
											"value": "2023-06-23 12:00:00",
											"type": "text"
										},
										{
											"key": "tests[1][guid]",
											"value": "TS38",
											"type": "text"
										},
										{
											"key": "tests[1][start_date]",
											"value": "2023-06-26 09:00:00",
											"type": "text"
										},
										{
											"key": "tests[1][end_date]",
											"value": "2023-06-26 12:00:00",
											"type": "text"
										},
										{
											"key": "tests[2][guid]",
											"value": "TS39",
											"type": "text"
										},
										{
											"key": "tests[2][start_date]",
											"value": "2023-06-24 09:00:00",
											"type": "text"
										},
										{
											"key": "tests[2][end_date]",
											"value": "2023-06-24 12:00:00",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}course/add_test/NEW9",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"add_test",
										"NEW9"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new test in a course",
							"id": "59905fb9-ecfc-454f-845d-e79d669b2d60",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Adjective Test",
											"description": "Required. Alphanumeric text",
											"type": "text"
										},
										{
											"key": "type",
											"value": "quiz",
											"description": "Required\nAccepted values= evaluated, practice, quiz\nDefault = evaluated",
											"type": "text"
										},
										{
											"key": "details",
											"value": "Describe a normal school day in the life of a student in your country including hours, class subjects, meals, rules, dress, and extra-curricular activities. What options are there in your country to take online classes through distance learning, even for children?",
											"description": "Optional.",
											"type": "text"
										},
										{
											"key": "start_date",
											"value": "2023-08-18 09:00:00",
											"description": "Date and time format 0000-00-00 00:00:00",
											"type": "text",
											"disabled": true
										},
										{
											"key": "end_date",
											"value": "2023-08-25 09:00:00",
											"description": "Date and time format 0000-00-00 00:00:00",
											"type": "text",
											"disabled": true
										},
										{
											"key": "created_by",
											"value": "UR1",
											"description": "Required",
											"type": "text"
										},
										{
											"key": "category_guid",
											"value": "ADJ3",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}course/create_test/NEW24",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"create_test",
										"NEW24"
									]
								},
								"description": "This API will create a new test and return test GUID. Input parameters are\n\n**title**: required, alpha-numeric with punctuations (- , _ ' \" ), minimum length 1, max length 200 characters\n\n**details**: string (html allowed), max length 1000 characters\n\n**instructions**: string (html allowed), max length 1000 characters\n\n**status**: 0 = Unpublished, 1 = Published, 2 = Archived\n\n**created_by**: user guid"
							},
							"response": [
								{
									"id": "dd15252a-aecf-4d38-8498-4db2ef55d9cd",
									"name": "Create test",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "title",
													"value": "English Exam",
													"type": "text"
												},
												{
													"key": "details",
													"value": "",
													"type": "text"
												},
												{
													"key": "instructions",
													"value": "",
													"type": "text"
												},
												{
													"key": "status",
													"value": "1",
													"type": "text"
												},
												{
													"key": "created_by",
													"value": "CA000030",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/tests/add",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"tests",
												"add"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 02 Dec 2022 11:39:54 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "97"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"TEST_CRATED_SUCCESSFULLY\",\n    \"payload\": {\n        \"guid\": \"TE000012\"\n    }\n}"
								}
							]
						},
						{
							"name": "Get/search all the tests in a course",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "67b99d77-e4a7-44b1-9c66-1a6c97b1d10e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0fa9163e-d01e-42af-b031-2a55dc749a93",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "results_per_page",
											"value": "",
											"description": "Optional. Any numeric value. Default = 15",
											"type": "text",
											"disabled": true
										},
										{
											"key": "status",
											"value": "1",
											"description": "Optional. Values[0,1,2]. Default = all",
											"type": "text",
											"disabled": true
										},
										{
											"key": "search",
											"value": "",
											"description": "Optional. Any string text. Default = all",
											"type": "text",
											"disabled": true
										},
										{
											"key": "order_by",
											"value": "",
											"description": "Optional. Values[title_asc, title_desc]. Default = title_asc",
											"type": "text",
											"disabled": true
										},
										{
											"key": "test_type",
											"value": "",
											"description": "Optional. Values[evaluated, practice, quiz]. Default = all",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}course/get_tests/NEW15",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"get_tests",
										"NEW15"
									]
								},
								"description": "This API returns records of all tests. no parameters required"
							},
							"response": [
								{
									"id": "40e15b9d-26af-4638-9ffa-bb2b1625d046",
									"name": "List tests",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/tests/list",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"tests",
												"list"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 02 Dec 2022 10:48:01 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "306"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"TESTS_FOUND\",\n    \"payload\": {\n        \"meta\": {\n            \"first_page\": 1,\n            \"last_page\": 1,\n            \"current_page\": 1,\n            \"num_results\": 6,\n            \"total_results\": 6\n        },\n        \"data\": [\n            {\n                \"guid\": \"TE00001\",\n                \"title\": \"Demo test\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"0\",\n                \"created_on\": \"2022-11-21 09:05:14\"\n            },\n            {\n                \"guid\": \"TE00003\",\n                \"title\": \"English test\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"0\",\n                \"created_on\": \"2022-11-21 09:11:40\"\n            },\n            {\n                \"guid\": \"TE00002\",\n                \"title\": \"Mathematics test\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"0\",\n                \"created_on\": \"2022-11-21 09:11:18\"\n            },\n            {\n                \"guid\": \"TE00005\",\n                \"title\": \"New GK test\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"0\",\n                \"created_on\": \"2022-11-21 09:12:21\"\n            },\n            {\n                \"guid\": \"TE00004\",\n                \"title\": \"Science test for kids\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"0\",\n                \"created_on\": \"2022-11-21 09:11:52\"\n            },\n            {\n                \"guid\": \"TE00007\",\n                \"title\": \"Second term exams\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"1\",\n                \"created_on\": \"2022-11-21 09:51:34\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Change test dates",
							"id": "29ed2ffb-d9b7-4e29-9d7c-cf706eac565a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "tests[0][guid]",
											"value": "TS1",
											"type": "text"
										},
										{
											"key": "tests[0][start_date]",
											"value": "2023-07-12 09:00:00",
											"type": "text"
										},
										{
											"key": "tests[0][end_date]",
											"value": "2023-08-13 12:00:00",
											"type": "text"
										},
										{
											"key": "tests[1][guid]",
											"value": "TS2",
											"type": "text"
										},
										{
											"key": "tests[1][start_date]",
											"value": "2023-05-12 09:00:00",
											"type": "text"
										},
										{
											"key": "tests[1][end_date]",
											"value": "2023-06-20 12:00:00",
											"type": "text"
										},
										{
											"key": "tests[2][guid]",
											"value": "TS3",
											"type": "text"
										},
										{
											"key": "tests[2][start_date]",
											"value": "2023-08-20 09:00:00",
											"type": "text"
										},
										{
											"key": "tests[2][end_date]",
											"value": "2023-09-22 12:00:00",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}course/test_dates/NEW14",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"test_dates",
										"NEW14"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove test from a course",
							"id": "98b88675-b40f-48e8-8ecf-d72f8492e476",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "tests[0]",
											"value": "TS84",
											"type": "text"
										},
										{
											"key": "tests[1]",
											"value": "TS38",
											"type": "text"
										},
										{
											"key": "tests[2]",
											"value": "TS39",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}course/remove_tests/NEW9",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"remove_tests",
										"NEW9"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete test from a course (and system)",
							"id": "cf473cda-2913-41ec-a8e8-05cd7d8017ab",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "tests[0]",
											"value": "TS84",
											"type": "text"
										},
										{
											"key": "tests[1]",
											"value": "TS38",
											"type": "text"
										},
										{
											"key": "tests[2]",
											"value": "TS39",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}course/delete_tests/NEW9",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"delete_tests",
										"NEW9"
									]
								}
							},
							"response": []
						}
					],
					"id": "110eb88d-1918-4e35-8de6-af9392434389"
				},
				{
					"name": "Meeting",
					"item": [
						{
							"name": "Zoom",
							"item": [
								{
									"name": "Add existing meeting to a course",
									"id": "42282b7c-7bc0-428b-bca5-3850b71fe63b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "meeting[0][guid]",
													"value": "noSkzvAG",
													"type": "text"
												},
												{
													"key": "meeting[0][start_date]",
													"value": "2023-06-23 09:00:00",
													"type": "text"
												},
												{
													"key": "meeting[0][end_date]",
													"value": "2023-06-23 12:00:00",
													"type": "text"
												},
												{
													"key": "meeting[1][guid]",
													"value": "rZuocfWT",
													"type": "text"
												},
												{
													"key": "meeting[1][start_date]",
													"value": "2023-06-26 09:00:00",
													"type": "text"
												},
												{
													"key": "meeting[1][end_date]",
													"value": "2023-06-26 12:00:00",
													"type": "text"
												},
												{
													"key": "meeting[2][guid]",
													"value": "TS39",
													"type": "text"
												},
												{
													"key": "meeting[2][start_date]",
													"value": "2023-06-24 09:00:00",
													"type": "text"
												},
												{
													"key": "meeting[2][end_date]",
													"value": "2023-06-24 12:00:00",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}course/zoom/add_meeting/NEW9",
											"host": [
												"{{base_url}}course"
											],
											"path": [
												"zoom",
												"add_meeting",
												"NEW9"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new meeting in a course",
									"id": "b5ca0f9f-08fb-4462-9cbd-ee713f07c9c1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "details",
													"value": "Asif Aziz is inviting you to a scheduled Zoom meeting.\nTopic: Cosmic meeting \nTime: Apr 27, 2023 05:00 PM Mumbai, Kolkata, New Delhi\nJoin Zoom Meeting\nhttps://us04web.zoom.us/j/74334468099?pwd=sh0MrWO5GZQ23VTLiY94Y4bmbOC2SD.1\nMeeting ID: 743 3446 8099\nPasscode: ex5U9J",
													"description": "Required.",
													"type": "text"
												},
												{
													"key": "created_by",
													"value": "{{admin_guid}}",
													"description": "Required",
													"type": "text"
												},
												{
													"key": "start_date",
													"value": "2023-06-25 09:00:00",
													"description": "Date and time format 0000-00-00 00:00:00",
													"type": "text"
												},
												{
													"key": "end_date",
													"value": "",
													"description": "Date and time format 0000-00-00 00:00:00",
													"type": "text",
													"disabled": true
												},
												{
													"key": "title",
													"value": "New meeting",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}course/zoom/create_meeting/NEW9",
											"host": [
												"{{base_url}}course"
											],
											"path": [
												"zoom",
												"create_meeting",
												"NEW9"
											]
										},
										"description": "This API will create a new test and return test GUID. Input parameters are\n\n**title**: required, alpha-numeric with punctuations (- , _ ' \" ), minimum length 1, max length 200 characters\n\n**details**: string (html allowed), max length 1000 characters\n\n**instructions**: string (html allowed), max length 1000 characters\n\n**status**: 0 = Unpublished, 1 = Published, 2 = Archived\n\n**created_by**: user guid"
									},
									"response": [
										{
											"id": "f5fc3ed9-2254-4e8a-a277-760824b6da69",
											"name": "Create test",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "title",
															"value": "English Exam",
															"type": "text"
														},
														{
															"key": "details",
															"value": "",
															"type": "text"
														},
														{
															"key": "instructions",
															"value": "",
															"type": "text"
														},
														{
															"key": "status",
															"value": "1",
															"type": "text"
														},
														{
															"key": "created_by",
															"value": "CA000030",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "https://developer1.website/dev/caapis/public/tests/add",
													"protocol": "https",
													"host": [
														"developer1",
														"website"
													],
													"path": [
														"dev",
														"caapis",
														"public",
														"tests",
														"add"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Fri, 02 Dec 2022 11:39:54 GMT"
												},
												{
													"key": "Server",
													"value": "Apache"
												},
												{
													"key": "X-Powered-By",
													"value": "PHP/7.4.33"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
												},
												{
													"key": "Cache-control",
													"value": "no-store, max-age=0, no-cache"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Upgrade",
													"value": "h2,h2c"
												},
												{
													"key": "Connection",
													"value": "Upgrade, Keep-Alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "Content-Length",
													"value": "97"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=3, max=500"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=UTF-8"
												}
											],
											"cookie": [],
											"body": "{\n    \"success\": true,\n    \"message\": \"TEST_CRATED_SUCCESSFULLY\",\n    \"payload\": {\n        \"guid\": \"TE000012\"\n    }\n}"
										}
									]
								},
								{
									"name": "Get/search all the meetings in a course",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c1c113ed-bc24-4b92-aec1-f3dbb1c472a0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "5ff5c857-6933-4e3f-aec8-32bc8417bc55",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{base_url}}course/zoom/get_meetings/NEW9",
											"host": [
												"{{base_url}}course"
											],
											"path": [
												"zoom",
												"get_meetings",
												"NEW9"
											]
										},
										"description": "This API returns records of all tests. no parameters required"
									},
									"response": [
										{
											"id": "15d7d7b5-e05b-4dfe-b675-6ba4d9f846ba",
											"name": "List tests",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://developer1.website/dev/caapis/public/tests/list",
													"protocol": "https",
													"host": [
														"developer1",
														"website"
													],
													"path": [
														"dev",
														"caapis",
														"public",
														"tests",
														"list"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Fri, 02 Dec 2022 10:48:01 GMT"
												},
												{
													"key": "Server",
													"value": "Apache"
												},
												{
													"key": "X-Powered-By",
													"value": "PHP/7.4.33"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
												},
												{
													"key": "Cache-control",
													"value": "no-store, max-age=0, no-cache"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Upgrade",
													"value": "h2,h2c"
												},
												{
													"key": "Connection",
													"value": "Upgrade, Keep-Alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "Content-Length",
													"value": "306"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=3, max=500"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=UTF-8"
												}
											],
											"cookie": [],
											"body": "{\n    \"success\": true,\n    \"message\": \"TESTS_FOUND\",\n    \"payload\": {\n        \"meta\": {\n            \"first_page\": 1,\n            \"last_page\": 1,\n            \"current_page\": 1,\n            \"num_results\": 6,\n            \"total_results\": 6\n        },\n        \"data\": [\n            {\n                \"guid\": \"TE00001\",\n                \"title\": \"Demo test\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"0\",\n                \"created_on\": \"2022-11-21 09:05:14\"\n            },\n            {\n                \"guid\": \"TE00003\",\n                \"title\": \"English test\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"0\",\n                \"created_on\": \"2022-11-21 09:11:40\"\n            },\n            {\n                \"guid\": \"TE00002\",\n                \"title\": \"Mathematics test\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"0\",\n                \"created_on\": \"2022-11-21 09:11:18\"\n            },\n            {\n                \"guid\": \"TE00005\",\n                \"title\": \"New GK test\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"0\",\n                \"created_on\": \"2022-11-21 09:12:21\"\n            },\n            {\n                \"guid\": \"TE00004\",\n                \"title\": \"Science test for kids\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"0\",\n                \"created_on\": \"2022-11-21 09:11:52\"\n            },\n            {\n                \"guid\": \"TE00007\",\n                \"title\": \"Second term exams\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"1\",\n                \"created_on\": \"2022-11-21 09:51:34\"\n            }\n        ]\n    }\n}"
										}
									]
								},
								{
									"name": "Change dates",
									"id": "92d8ae68-680b-46bd-a9f4-38fa56f6223a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "meeting[0][guid]",
													"value": "noSkzvAG",
													"type": "text"
												},
												{
													"key": "meeting[0][start_date]",
													"value": "2023-07-23 09:00:00",
													"type": "text"
												},
												{
													"key": "meeting[0][end_date]",
													"value": "2023-08-23 12:00:00",
													"type": "text"
												},
												{
													"key": "meeting[1][guid]",
													"value": "TS38",
													"type": "text"
												},
												{
													"key": "meeting[1][start_date]",
													"value": "2023-06-26 09:00:00",
													"type": "text"
												},
												{
													"key": "meeting[1][end_date]",
													"value": "2023-06-26 12:00:00",
													"type": "text"
												},
												{
													"key": "meeting[2][guid]",
													"value": "TS39",
													"type": "text"
												},
												{
													"key": "tests[2][start_date]",
													"value": "2023-06-24 09:00:00",
													"type": "text"
												},
												{
													"key": "tests[2][end_date]",
													"value": "2023-06-24 12:00:00",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}course/zoom/change_dates/NEW9",
											"host": [
												"{{base_url}}course"
											],
											"path": [
												"zoom",
												"change_dates",
												"NEW9"
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove meeting from a course",
									"id": "72bd3037-29fd-4972-af43-9ee93bac33b7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "meeting[0]",
													"value": "noSkzvAG",
													"type": "text"
												},
												{
													"key": "meeting[1]",
													"value": "TS38",
													"type": "text"
												},
												{
													"key": "meeting[2]",
													"value": "TS39",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}course/zoom/remove_meetings/NEW9",
											"host": [
												"{{base_url}}course"
											],
											"path": [
												"zoom",
												"remove_meetings",
												"NEW9"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete test from a course (and system)",
									"id": "64703a96-3c4c-4fc0-ae8f-68f879ab53a7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "tests[0]",
													"value": "TS84",
													"type": "text"
												},
												{
													"key": "tests[1]",
													"value": "TS38",
													"type": "text"
												},
												{
													"key": "tests[2]",
													"value": "TS39",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}course/zoom/delete_meetings/NEW9",
											"host": [
												"{{base_url}}course"
											],
											"path": [
												"zoom",
												"delete_meetings",
												"NEW9"
											]
										}
									},
									"response": []
								}
							],
							"id": "0e9bd055-a984-47e3-a059-7b369fb24ffa"
						}
					],
					"id": "c36ad1ad-3e91-49ca-b420-d487c31cb8c9"
				},
				{
					"name": "Enrolments",
					"item": [
						{
							"name": "Enrol users in course",
							"id": "446edd6b-d241-410d-a47c-1a8206e9e399",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "users[0]",
											"value": "UR29",
											"type": "text"
										},
										{
											"key": "users[1]",
											"value": "UR30",
											"type": "text"
										},
										{
											"key": "users[2]",
											"value": "CA000015",
											"type": "text",
											"disabled": true
										},
										{
											"key": "users[3]",
											"value": "CA000016",
											"type": "text",
											"disabled": true
										},
										{
											"key": "users[4]",
											"value": "CA000017",
											"type": "text",
											"disabled": true
										},
										{
											"key": "users[5]",
											"value": "CA000018",
											"type": "text",
											"disabled": true
										},
										{
											"key": "start_date",
											"value": "2023-05-15 09:00:00",
											"type": "text"
										},
										{
											"key": "end_date",
											"value": "2023-05-25 10:00:00",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}course/enrol/NEW15",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"enrol",
										"NEW15"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get list of enroled users",
							"id": "f9b5c077-0dc6-46b0-891d-8893ae5ce249",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{base_url}}/course/enrolments/NEW24",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"course",
										"enrolments",
										"NEW24"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get list of not enroled users",
							"id": "1056c2c4-1716-4739-b4d9-71f84e891894",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "role",
											"value": "admin",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/course/notenroled/NEW9",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"course",
										"notenroled",
										"NEW9"
									]
								}
							},
							"response": []
						},
						{
							"name": "Unenrol users",
							"id": "96205e2b-931c-46c2-a708-0be501c4eda5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "users[0]",
											"value": "UR30",
											"type": "text"
										},
										{
											"key": "users[1]",
											"value": "CA000014",
											"type": "text",
											"disabled": true
										},
										{
											"key": "users[2]",
											"value": "CA000015",
											"type": "text",
											"disabled": true
										},
										{
											"key": "users[3]",
											"value": "CA000016",
											"type": "text",
											"disabled": true
										},
										{
											"key": "users[4]",
											"value": "UR29",
											"type": "text"
										},
										{
											"key": "users[5]",
											"value": "CA000018",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}course/unenrol/NEW9",
									"host": [
										"{{base_url}}course"
									],
									"path": [
										"unenrol",
										"NEW9"
									]
								}
							},
							"response": []
						}
					],
					"id": "ddede469-94bf-46a4-b77e-26cf61ea0679"
				},
				{
					"name": "Learner",
					"item": [
						{
							"name": "My courses",
							"id": "541c217f-0410-4333-83e4-86ec2ffdc689",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{base_url}}learner/courses/my_courses",
									"host": [
										"{{base_url}}learner"
									],
									"path": [
										"courses",
										"my_courses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get course tests",
							"id": "e0807bda-552a-480c-974d-adc4893d2023",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "test_type",
											"value": "evaluated",
											"description": "Optional field. Is used to filter test types. Accepts values [evaluated, practice, quiz].",
											"type": "text",
											"disabled": true
										},
										{
											"key": "filter",
											"value": "ongoing, upcoming, past",
											"description": "Optional field. Only applicable when evaulated test is selected in \"test_type\" field.",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}learner/courses/tests/NEW24",
									"host": [
										"{{base_url}}learner"
									],
									"path": [
										"courses",
										"tests",
										"NEW24"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get course subjects",
							"id": "ee5f59e5-172d-4d49-8653-c0756aa1788d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"response": []
						},
						{
							"name": "Get course lessons",
							"id": "cd7fca53-1137-4a2a-b719-f732b593227d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "status",
											"value": "1",
											"type": "text"
										},
										{
											"key": "course_guid",
											"value": "NEW9",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}lesson/list",
									"host": [
										"{{base_url}}lesson"
									],
									"path": [
										"list"
									]
								}
							},
							"response": []
						}
					],
					"id": "024af8a5-f54e-460b-ac42-538e8bc9d372"
				}
			],
			"id": "116bd79e-9a63-4442-8514-87f7ea5b9d63"
		},
		{
			"name": "Tests",
			"item": [
				{
					"name": "Test Shell",
					"item": [
						{
							"name": "List tests",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3449a6b9-4951-4264-a114-bf6fa3d125c1",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "13076dd2-672b-4dc1-a1d2-0f44e50c8dde",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{base_url}}tests/list",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"list"
									]
								},
								"description": "This API returns records of all tests. no parameters required"
							},
							"response": [
								{
									"id": "3e140d0b-9d22-4a0c-8d26-954baad95401",
									"name": "List tests",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/tests/list",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"tests",
												"list"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 02 Dec 2022 10:48:01 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "306"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"TESTS_FOUND\",\n    \"payload\": {\n        \"meta\": {\n            \"first_page\": 1,\n            \"last_page\": 1,\n            \"current_page\": 1,\n            \"num_results\": 6,\n            \"total_results\": 6\n        },\n        \"data\": [\n            {\n                \"guid\": \"TE00001\",\n                \"title\": \"Demo test\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"0\",\n                \"created_on\": \"2022-11-21 09:05:14\"\n            },\n            {\n                \"guid\": \"TE00003\",\n                \"title\": \"English test\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"0\",\n                \"created_on\": \"2022-11-21 09:11:40\"\n            },\n            {\n                \"guid\": \"TE00002\",\n                \"title\": \"Mathematics test\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"0\",\n                \"created_on\": \"2022-11-21 09:11:18\"\n            },\n            {\n                \"guid\": \"TE00005\",\n                \"title\": \"New GK test\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"0\",\n                \"created_on\": \"2022-11-21 09:12:21\"\n            },\n            {\n                \"guid\": \"TE00004\",\n                \"title\": \"Science test for kids\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"0\",\n                \"created_on\": \"2022-11-21 09:11:52\"\n            },\n            {\n                \"guid\": \"TE00007\",\n                \"title\": \"Second term exams\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"1\",\n                \"created_on\": \"2022-11-21 09:51:34\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Search and filter tests",
							"id": "0958bb33-8ef5-45e6-85a8-c2e208bcfd51",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "results_per_page",
											"value": "2",
											"description": "Number of records to be returned. Used for pagination. Default value is 15",
											"type": "text",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination. Default value 1.",
											"type": "text",
											"disabled": true
										},
										{
											"key": "status",
											"value": "1",
											"description": "default value is 1. accepted values are\n0 = inactive\n1 = active\n2 = archived",
											"type": "text",
											"disabled": true
										},
										{
											"key": "search",
											"value": "",
											"description": "Text to be searched. Used for a full text search in fields Test title, details.",
											"type": "text",
											"disabled": true
										},
										{
											"key": "order_by",
											"value": "",
											"description": "Accepted values\nnewest_first\nnewest_last\ntitle_desc\ntitle_asc - (default",
											"type": "text",
											"disabled": true
										},
										{
											"key": "test_type",
											"value": "evaluated",
											"description": "Filter result by test type. Accepted values are-\npractice, evaluated, quiz",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}tests/list",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"list"
									]
								},
								"description": "StartFragment\n\nThis API will return a list of all tests based on the search criteria. As input it takes following form parameters:\n\n- **results_per_page** - records to be returned. Used for pagination. Default value is 15\n- **search** - text to be searched. Used for a full text search in fields Test title, details.\n- **page** - page number for pagination. Default value 1.\n- **order_by** - accepted values\n    - newest_first\n    - newest_last\n    - title_desc\n    - title_asc - (default)\n- **status** - default value is 1. accepted values are\n    - 0 = inactive\n    - 1 = active\n    - 2 = archived"
							},
							"response": [
								{
									"id": "044b442f-3d1c-488b-8f63-82d6a1a01e76",
									"name": "Search and filter tests",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "results_per_page",
													"value": "2",
													"type": "text",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"type": "text",
													"disabled": true
												},
												{
													"key": "status",
													"value": "2",
													"type": "text",
													"disabled": true
												},
												{
													"key": "search",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "order_by",
													"value": "",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/tests/list",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"tests",
												"list"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 02 Dec 2022 10:58:13 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "306"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"TESTS_FOUND\",\n    \"payload\": {\n        \"meta\": {\n            \"first_page\": 1,\n            \"last_page\": 1,\n            \"current_page\": 1,\n            \"num_results\": 6,\n            \"total_results\": 6\n        },\n        \"data\": [\n            {\n                \"guid\": \"TE00001\",\n                \"title\": \"Demo test\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"0\",\n                \"created_on\": \"2022-11-21 09:05:14\"\n            },\n            {\n                \"guid\": \"TE00003\",\n                \"title\": \"English test\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"0\",\n                \"created_on\": \"2022-11-21 09:11:40\"\n            },\n            {\n                \"guid\": \"TE00002\",\n                \"title\": \"Mathematics test\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"0\",\n                \"created_on\": \"2022-11-21 09:11:18\"\n            },\n            {\n                \"guid\": \"TE00005\",\n                \"title\": \"New GK test\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"0\",\n                \"created_on\": \"2022-11-21 09:12:21\"\n            },\n            {\n                \"guid\": \"TE00004\",\n                \"title\": \"Science test for kids\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"0\",\n                \"created_on\": \"2022-11-21 09:11:52\"\n            },\n            {\n                \"guid\": \"TE00007\",\n                \"title\": \"Second term exams\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"1\",\n                \"created_on\": \"2022-11-21 09:51:34\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Create test",
							"id": "2c5bea67-44d8-41d8-9431-dc570921654c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Select the correct adverb or adjective that can be inserted in the blank space. Also identify if the selected item is adverb or adjective.",
											"description": "Required. Alphanumeric text",
											"type": "text"
										},
										{
											"key": "type",
											"value": "evaluated",
											"description": "Required\nAccepted values= evaluated, practice, quiz\nDefault = evaluated",
											"type": "text"
										},
										{
											"key": "details",
											"value": "This is a practice situational judgement test that simulates the real test. \n\nThe test has 10 questions and you should aim to complete the test within 10 minutes.\n\nAll questions are multiple-choice. \n\nMake sure you read a question in full before answering.\n\nAnswers and explanations to the questions are provided at the end of the test.\n\n\n",
											"description": "Optional.",
											"type": "text"
										},
										{
											"key": "category_guid",
											"value": "ENG1",
											"description": "Optional",
											"type": "text",
											"disabled": true
										},
										{
											"key": "created_by",
											"value": "UR1",
											"description": "Required",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}tests/add",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"add"
									]
								},
								"description": "This API will create a new test and return test GUID. Input parameters are\n\n**title**: required, alpha-numeric with punctuations (- , _ ' \" ), minimum length 1, max length 200 characters\n\n**details**: string (html allowed), max length 1000 characters\n\n**instructions**: string (html allowed), max length 1000 characters\n\n**status**: 0 = Unpublished, 1 = Published, 2 = Archived\n\n**created_by**: user guid"
							},
							"response": [
								{
									"id": "1fc15d22-97f0-433f-b9f5-40620ff7a586",
									"name": "Create test",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "title",
													"value": "English Exam",
													"type": "text"
												},
												{
													"key": "details",
													"value": "",
													"type": "text"
												},
												{
													"key": "instructions",
													"value": "",
													"type": "text"
												},
												{
													"key": "status",
													"value": "1",
													"type": "text"
												},
												{
													"key": "created_by",
													"value": "CA000030",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/tests/add",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"tests",
												"add"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 02 Dec 2022 11:39:54 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "97"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"TEST_CRATED_SUCCESSFULLY\",\n    \"payload\": {\n        \"guid\": \"TE000012\"\n    }\n}"
								}
							]
						},
						{
							"name": "Edit Test",
							"id": "17279a8f-cc69-4bfc-a39a-929864a7d7ba",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Computer Networks Basic 3",
											"description": "Required",
											"type": "text"
										},
										{
											"key": "details",
											"value": "some details",
											"description": "Optional",
											"type": "text"
										},
										{
											"key": "created_by",
											"value": "UR1",
											"description": "Required",
											"type": "text"
										},
										{
											"key": "category_guid",
											"value": "ENG1",
											"description": "Optional",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}tests/add/GLQ33",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"add",
										"GLQ33"
									]
								},
								"description": "This API will create a new test and return test GUID. Input parameters are\n\n**title**: required, alpha-numeric with punctuations (- , _ ' \" ), minimum length 1, max length 200 characters\n\n**details**: string (html allowed), max length 1000 characters\n\n**instructions**: string (html allowed), max length 1000 characters\n\n**status**: 0 = Unpublished, 1 = Published, 2 = Archived\n\n**created_by**: user guid"
							},
							"response": [
								{
									"id": "2209e44c-9416-4bf7-b6d3-f6001e70d391",
									"name": "Create test",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "title",
													"value": "English Exam",
													"type": "text"
												},
												{
													"key": "details",
													"value": "",
													"type": "text"
												},
												{
													"key": "instructions",
													"value": "",
													"type": "text"
												},
												{
													"key": "status",
													"value": "1",
													"type": "text"
												},
												{
													"key": "created_by",
													"value": "CA000030",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/tests/add",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"tests",
												"add"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 02 Dec 2022 11:39:54 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "97"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"TEST_CRATED_SUCCESSFULLY\",\n    \"payload\": {\n        \"guid\": \"TE000012\"\n    }\n}"
								}
							]
						},
						{
							"name": "Test settings",
							"id": "c15b1547-2c13-4672-aa41-6d04256644ff",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "marks_per_question",
											"value": "1",
											"type": "text",
											"description": "Marks alloted to each question in test. Postive decimal values allowed. Default value is 1"
										},
										{
											"key": "neg_marks_per_question",
											"value": "0",
											"type": "text",
											"description": "Negative marks alloted to each question in test. Postive decimal values allowed without any sign (+ or -). Default value is 0"
										},
										{
											"key": "pass_marks",
											"value": "30",
											"type": "text",
											"description": "Passing marks of test. Positive values are allowed without (+ or -) sign. Passing marks can be fixed marks or percentage. Default value is 0. "
										},
										{
											"key": "pass_marks_unit",
											"value": "percentage",
											"type": "text",
											"description": "Passing marks unit. Accepted values are [fixed, percentage]. Default value is fixed "
										},
										{
											"key": "time_per_question",
											"value": "0",
											"type": "text",
											"description": "Time alloted in seconds to each question in test. Whole numbers are allowed. Default value is 0 (no time limit)"
										},
										{
											"key": "test_duration",
											"value": "0",
											"type": "text",
											"description": "Time alloted in minutes for overall test. Whole numbers are allowed. Default value is 0 (no time limit). Either time_per_question or test_duration will be applicable at a time"
										},
										{
											"key": "show_timer",
											"value": "false",
											"type": "text",
											"description": "Display the timer. Allowed values [true, false]. Default value is false"
										},
										{
											"key": "show_result",
											"value": "immediately",
											"type": "text",
											"description": "Setting for when to show the result to student. Allowed values are [immediately, on_date, manually]"
										},
										{
											"key": "on_date",
											"value": "01-12-2023 15:25:00",
											"type": "text",
											"description": "Date on which to release the result. Will be used only when on_date setting is selected above. Default value NULL. Format DD-MM-YYYY HH:MM:SS"
										},
										{
											"key": "num_attempts",
											"value": "0",
											"type": "text",
											"description": "Number of attempts for test. Default value is 0. Allowed values are [1, 2, 3...10]"
										},
										{
											"key": "show_question_hint_on_test_page",
											"value": "0",
											"type": "text",
											"description": "Setting to display question hint on test page"
										},
										{
											"key": "randomize_questions_within_test",
											"value": "1",
											"type": "text",
											"description": "Randomize test questions. Accepted values are [0 and 1]"
										},
										{
											"key": "randomize_answer_choices",
											"value": "1",
											"type": "text",
											"description": "Randomize answer choices. Accepted values are [0 and 1]"
										},
										{
											"key": "randomize_questions_within_comprehension",
											"value": "0",
											"type": "text",
											"description": "Randomize sub(child) questions within a comprehension question (parent). This setting will be applicable to only comprehension type questions. "
										},
										{
											"key": "allow_bookmark_questions",
											"value": "1",
											"type": "text",
											"description": "Randomize those answer choices which are marked as \"fixed\" (eg None of the above). Can be set only when \"randomize_answer_choices\" is 1"
										},
										{
											"key": "show_bookmark_question_correct_answer",
											"value": "0",
											"type": "text"
										},
										{
											"key": "randomize_fixed_answer_choices",
											"value": "0",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}tests/settings/BAS6",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"settings",
										"BAS6"
									]
								},
								"description": "This API will update a test and return test GUID. Input parameters are\n\n**test_guid**: {required}{url parameter}\n\n**title**: required, alpha-numeric with punctuations (- , _ ' \" ), minimum length 1, max length 200 characters\n\n**details**: string (html allowed), max length 1000 characters\n\n**instructions**: string (html allowed), max length 1000 characters\n\n**status**: 0 = Unpublished, 1 = Published, 2 = Archived\n\n**created_by**: user guid"
							},
							"response": [
								{
									"id": "8e9b58e4-582d-4e1c-9f98-3e28afb6b6cf",
									"name": "Update test",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "title",
													"value": "New English Exam",
													"type": "text"
												},
												{
													"key": "details",
													"value": "",
													"type": "text"
												},
												{
													"key": "instructions",
													"value": "",
													"type": "text"
												},
												{
													"key": "status",
													"value": "0",
													"type": "text"
												},
												{
													"key": "created_by",
													"value": "CA000030",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/tests/add/TE000012",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"tests",
												"add",
												"TE000012"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 02 Dec 2022 11:44:02 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "98"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"TEST_UPDATED_SUCCESSFULLY\",\n    \"payload\": {\n        \"guid\": \"TE000012\"\n    }\n}"
								}
							]
						},
						{
							"name": "View test",
							"id": "8f14dbca-115c-4108-a076-aee6dbad5b92",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}tests/view/BAS6",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"view",
										"BAS6"
									]
								},
								"description": "API to get details of a test. Required url parameter is test guid"
							},
							"response": [
								{
									"id": "7f3c7019-9278-45fd-9c5e-c027c830af95",
									"name": "View test",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/tests/view/te000012",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"tests",
												"view",
												"te000012"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 02 Dec 2022 11:44:27 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "161"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"TEST_FOUND\",\n    \"payload\": {\n        \"guid\": \"TE000012\",\n        \"title\": \"New English Exam\",\n        \"details\": \"\",\n        \"instructions\": \"\",\n        \"status\": \"0\",\n        \"created_on\": \"2022-12-02 05:39:54\"\n    }\n}"
								}
							]
						},
						{
							"name": "Delete test",
							"id": "abfe6a6d-fe5c-4b82-923c-2372ddf3f0d8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}tests/delete/GLQ29",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"delete",
										"GLQ29"
									]
								},
								"description": "API to delete test and questions. Required url parameters are test guid"
							},
							"response": []
						},
						{
							"name": "Set status",
							"id": "3adbf101-051e-4c46-bd0c-df08feea5655",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "status",
											"value": "1",
											"description": "Required. Accepeted values are\n0, 1, 2",
											"type": "text"
										},
										{
											"key": "updated_by",
											"value": "UR1",
											"description": "User guid",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}tests/status/SEL68",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"status",
										"SEL68"
									]
								},
								"description": "API to publish, unpublish and archive test. Required url parameter is test guid. POST parameters are:\n\n**status**: 0=unpublish, 1=publish, 2=archive\n\n**updated_by**: user guid"
							},
							"response": [
								{
									"id": "7e1a7341-47e3-49bd-9341-a3232d8eddd3",
									"name": "Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "status",
													"value": "1",
													"type": "text"
												},
												{
													"key": "updated_by",
													"value": "CA000031",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/tests/status/TE000012",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"tests",
												"status",
												"TE000012"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 02 Dec 2022 11:49:19 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "89"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"STATUS_UPDATED\",\n    \"payload\": {\n        \"guid\": \"TE000012\"\n    }\n}"
								}
							]
						},
						{
							"name": "Preview test",
							"id": "6c6df455-c650-48f4-9bff-1f69d7e04624",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}tests/preview/BAS6/1",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"preview",
										"BAS6",
										"1"
									]
								},
								"description": "This API will take two parameters in the URL\n\n1. test guid (required)\n2. choices (0, 1)\n    \n\nThe second parameter choices is for whether answer choices are also needed with the question."
							},
							"response": []
						},
						{
							"name": "Add question",
							"id": "aac688a8-c84f-42fe-b974-fa04416d14d1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "question",
											"value": "Please choose the correct answer\n\nYou manage a team of 10 people. Your employees are competent and cooperative. However, you noticed that lately they tend to take long coffee breaks and work rates seem slower. You are happy there is a good atmosphere in the office, but feel uncomfortable about the effect it is having on your employees' work.\n\nWhat would be the best response?",
											"description": "Required. Actual question. Any string value including htm formatting is allowed",
											"type": "text"
										},
										{
											"key": "userfile",
											"type": "file",
											"src": "/F:/Download/Project Files/Cosmic Academy/esl-lab files/elem2.mp3",
											"disabled": true
										},
										{
											"key": "question_type",
											"value": "mcmc",
											"description": "Required. Accepted values [mcmc, tf, la, comp\nmcmc = Multi Choice\ntf = True Flase\nla = Essay\ncomp = Comprehensive",
											"type": "text"
										},
										{
											"key": "choice[0]",
											"value": "Announce that from now on, any employee who wants to take a break should speak to you first",
											"description": "Aleast 1 answer choice is required.. wysiwyg",
											"type": "text"
										},
										{
											"key": "choice[1]",
											"value": "Decide that at any given time only one employee can take a coffee break",
											"description": "wysiwyg",
											"type": "text"
										},
										{
											"key": "choice[2]",
											"value": "Discuss the situation with the team and ask for their cooperation",
											"description": "wysiwyg",
											"type": "text"
										},
										{
											"key": "choice[3]",
											"value": "Announce deadlines for each task the team gets, and reprimand employees who don’t finish their tasks on time",
											"type": "text"
										},
										{
											"key": "correct_answer[0]",
											"value": "0",
											"description": "Atleast 1 value required. This is the array to indicate correct answer(s). Array keys should match the keys from choice keys above. \n0 or 1",
											"type": "text"
										},
										{
											"key": "correct_answer[1]",
											"value": "0",
											"description": "0, 1",
											"type": "text"
										},
										{
											"key": "correct_answer[2]",
											"value": "1",
											"description": "0, 1",
											"type": "text"
										},
										{
											"key": "correct_answer[3]",
											"value": "0",
											"type": "text"
										},
										{
											"key": "order[0]",
											"value": "1",
											"description": "Default ordering will be according to array values ie ,2,3. Array keys should match the keys from choice keys above",
											"type": "text",
											"disabled": true
										},
										{
											"key": "order[1]",
											"value": "2",
											"description": "Natural number",
											"type": "text",
											"disabled": true
										},
										{
											"key": "order[2]",
											"value": "3",
											"description": "NAtural number",
											"type": "text",
											"disabled": true
										},
										{
											"key": "order[3]",
											"value": "4",
											"type": "text",
											"disabled": true
										},
										{
											"key": "feedback",
											"value": "",
											"description": "Optional. wysiwyg editor",
											"type": "text",
											"disabled": true
										},
										{
											"key": "answer_feedback",
											"value": "",
											"description": "Optional. wysiwyg editor",
											"type": "text",
											"disabled": true
										},
										{
											"key": "marks",
											"value": "1.5",
											"description": "Optional. Positive floating numbers only",
											"type": "text",
											"disabled": true
										},
										{
											"key": "neg_marks",
											"value": "0",
											"description": "Optional. Positive floating numbers only",
											"type": "text",
											"disabled": true
										},
										{
											"key": "time",
											"value": "30",
											"description": "Time in seconds. Natural numbers only",
											"type": "text",
											"disabled": true
										},
										{
											"key": "created_by",
											"value": "UR1",
											"type": "text",
											"description": "User guid"
										},
										{
											"key": "parent_id",
											"value": "QN110",
											"type": "text",
											"description": "Optional",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}tests/create_question/SJT1",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"create_question",
										"SJT1"
									]
								},
								"description": "This API will add a new question in test and return test GUID and question GUID. Input parameters are\n\n**question**: required, string (html allowed)\n\n**question_type**: required, (values- mcmc = Multi Choice, tf = True False, la = Essay, comp = Comprehension)\n\n**feedback**: string (html allowed), max length 1000 characters\n\n**answer_feedback**: string (html allowed), max length 1000 characters\n\n**marks**: positive integers with float values (0, 1, 2, 3 ...) (0.25, 0.50 etc)\n\n**neg_marks**: positive integers with float values (0, 1, 2, 3 ...) (0.25, 0.50 etc)\n\n**time**: natural numbers (0, 1, 2, 3 ...). \\[unit measured in seconds\\]\n\n**choice**: required, string (html allowed). Input field must be an array eg\n\nchoice\\[0\\] = {value}\n\nchoice\\[1\\] = {value}\n\nchoice\\[2\\] = {value}\n\n**correct_answer**: at least one required, Allowed values- 0 or 1. Input field must be an array eg\n\ncorrect_answer\\[0\\] = {value}\n\ncorrect_answer\\[1\\] = {value}\n\ncorrect_answer\\[2\\] = {value}\n\n**position**: order of answer choices. Values- 1, 2, 3.... Input field must be an array eg\n\nposition\\[0\\] = {value} 1 or NULL\n\nposition\\[1\\] = {value} 2 or NULL\n\nposition\\[2\\] = {value} 3 or NULL\n\n**status**: 0 = Unpublished, 1 = Published\n\n**created_by**: user guid"
							},
							"response": [
								{
									"id": "3d3f687a-77c8-4a29-8a46-025e154923d9",
									"name": "Add question",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "question",
													"value": "What is the capital of Britain?",
													"type": "text"
												},
												{
													"key": "question_type",
													"value": "mcsc",
													"type": "text"
												},
												{
													"key": "feedback",
													"value": "none",
													"type": "text"
												},
												{
													"key": "answer_feedback",
													"value": "",
													"type": "text"
												},
												{
													"key": "marks",
													"value": "1",
													"type": "text"
												},
												{
													"key": "neg_marks",
													"value": "0",
													"type": "text"
												},
												{
													"key": "time",
													"value": "30",
													"type": "text"
												},
												{
													"key": "status",
													"value": "1",
													"type": "text"
												},
												{
													"key": "created_by",
													"value": "CA000030",
													"type": "text"
												},
												{
													"key": "choice[0]",
													"value": "London",
													"type": "text"
												},
												{
													"key": "choice[1]",
													"value": "Bristol",
													"type": "text"
												},
												{
													"key": "choice[2]",
													"value": "Manchester",
													"type": "text"
												},
												{
													"key": "correct_answer[0]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "correct_answer[1]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "correct_answer[2]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "order[0]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "order[1]",
													"value": "2",
													"type": "text"
												},
												{
													"key": "order[2]",
													"value": "3",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/tests/create_question/TE00008",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"tests",
												"create_question",
												"TE00008"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 05 Dec 2022 12:28:07 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "117"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"QUESTION_ADDED_SUCCESSFULLY\",\n    \"payload\": {\n        \"test_id\": \"TE00008\",\n        \"question_id\": \"QA00008\"\n    }\n}"
								}
							]
						},
						{
							"name": "Bulk upload questions",
							"id": "c059e829-2670-47cd-9aeb-7f1d1bbd69f5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "userfile",
											"description": "Required. Text files (.txt)",
											"type": "file",
											"src": "/F:/Download/Project Files/Coaching App/QA6/Mathmatics 1.txt"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}tests/upload_questions/BAS6",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"upload_questions",
										"BAS6"
									]
								}
							},
							"response": []
						},
						{
							"name": "Save bulk uploaded questions",
							"id": "3f515e7a-a25c-411c-a68b-5fb6c77d2422",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "questions[1][question]",
											"value": "Who among the following got the Bharat Ratna award before becoming the president of India?",
											"description": "Required. Actual question. Any string value including htm formatting is allowed",
											"type": "text"
										},
										{
											"key": "questions[1][question_type]",
											"value": "mcmc",
											"description": "Required. Accepted values [mcmc, tf, la, comp\nmcmc = Multi Choice\ntf = True Flase\nla = Essay\ncomp = Comprehensive",
											"type": "text"
										},
										{
											"key": "questions[1][choice][0]",
											"value": "R Venkataraman",
											"description": "Aleast 1 answer choice is required.. wysiwyg",
											"type": "text"
										},
										{
											"key": "questions[1][choice][1]",
											"value": "Dr. Rajendra Prasad",
											"description": "wysiwyg",
											"type": "text"
										},
										{
											"key": "questions[1][choice][2]",
											"value": "DR Zakir Hussian",
											"description": "wysiwyg",
											"type": "text"
										},
										{
											"key": "questions[1][choice][3]",
											"value": "All of the above.",
											"type": "text",
											"disabled": true
										},
										{
											"key": "questions[1][correct_answer][0]",
											"value": "0",
											"description": "Atleast 1 value required. This is the array to indicate correct answer(s). Array keys should match the keys from choice keys above. \n0 or 1",
											"type": "text"
										},
										{
											"key": "questions[1][correct_answer][1]",
											"value": "0",
											"description": "0, 1",
											"type": "text"
										},
										{
											"key": "questions[1][correct_answer][2]",
											"value": "1",
											"description": "0, 1",
											"type": "text"
										},
										{
											"key": "questions[1][correct_answer][3]",
											"value": "0",
											"type": "text",
											"disabled": true
										},
										{
											"key": "questions[1][order][0]",
											"value": "1",
											"description": "Default ordering will be according to array values ie ,2,3. Array keys should match the keys from choice keys above",
											"type": "text",
											"disabled": true
										},
										{
											"key": "questions[1][order][1]",
											"value": "2",
											"description": "Natural number",
											"type": "text",
											"disabled": true
										},
										{
											"key": "questions[1][order][2]",
											"value": "3",
											"description": "NAtural number",
											"type": "text",
											"disabled": true
										},
										{
											"key": "questions[1][order][3]",
											"value": "4",
											"type": "text",
											"disabled": true
										},
										{
											"key": "questions[1][feedback]",
											"value": "",
											"description": "Optional. wysiwyg editor",
											"type": "text",
											"disabled": true
										},
										{
											"key": "questions[1][answer_feedback]",
											"value": "",
											"description": "Optional. wysiwyg editor",
											"type": "text",
											"disabled": true
										},
										{
											"key": "questions[1][marks]",
											"value": "1.5",
											"description": "Optional. Positive floating numbers only",
											"type": "text",
											"disabled": true
										},
										{
											"key": "questions[1][neg_marks]",
											"value": "0",
											"description": "Optional. Positive floating numbers only",
											"type": "text",
											"disabled": true
										},
										{
											"key": "questions[1][time]",
											"value": "30",
											"description": "Time in seconds. Natural numbers only",
											"type": "text",
											"disabled": true
										},
										{
											"key": "questions[1][created_by]",
											"value": "{{admin_guid}}",
											"type": "text",
											"description": "User guid"
										},
										{
											"key": "questions[1][parent_id]",
											"value": "",
											"type": "text",
											"description": "Optional. Guid of parent question",
											"disabled": true
										},
										{
											"key": "questions[2][question]",
											"value": "This is second question",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}tests/save_uploaded_questions/TS66",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"save_uploaded_questions",
										"TS66"
									]
								},
								"description": "This API will add a new question in test and return test GUID and question GUID. Input parameters are\n\n**question**: required, string (html allowed)\n\n**question_type**: required, (values- mcmc = Multi Choice, tf = True False, la = Essay, comp = Comprehension)\n\n**feedback**: string (html allowed), max length 1000 characters\n\n**answer_feedback**: string (html allowed), max length 1000 characters\n\n**marks**: positive integers with float values (0, 1, 2, 3 ...) (0.25, 0.50 etc)\n\n**neg_marks**: positive integers with float values (0, 1, 2, 3 ...) (0.25, 0.50 etc)\n\n**time**: natural numbers (0, 1, 2, 3 ...). \\[unit measured in seconds\\]\n\n**choice**: required, string (html allowed). Input field must be an array eg\n\nchoice\\[0\\] = {value}\n\nchoice\\[1\\] = {value}\n\nchoice\\[2\\] = {value}\n\n**correct_answer**: at least one required, Allowed values- 0 or 1. Input field must be an array eg\n\ncorrect_answer\\[0\\] = {value}\n\ncorrect_answer\\[1\\] = {value}\n\ncorrect_answer\\[2\\] = {value}\n\n**position**: order of answer choices. Values- 1, 2, 3.... Input field must be an array eg\n\nposition\\[0\\] = {value} 1 or NULL\n\nposition\\[1\\] = {value} 2 or NULL\n\nposition\\[2\\] = {value} 3 or NULL\n\n**status**: 0 = Unpublished, 1 = Published\n\n**created_by**: user guid"
							},
							"response": []
						},
						{
							"name": "Get test questions",
							"id": "f3de4719-e850-46c9-902e-7588e082cb3b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}tests/questions/MAT59",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"questions",
										"MAT59"
									]
								},
								"description": "This API will take two parameters in the URL\n\n1. test guid (required)\n2. choices (0, 1)\n    \n\nThe second parameter choices is for whether answer choices are also needed with the question."
							},
							"response": []
						},
						{
							"name": "Remove question from test",
							"id": "363cea4e-8365-468b-a71d-44c8eacbbe7d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "questions[0]",
											"value": "QN5",
											"type": "text",
											"disabled": true
										},
										{
											"key": "questions[1]",
											"value": "QN6",
											"type": "text"
										},
										{
											"key": "questions[2]",
											"value": "QN7",
											"type": "text"
										},
										{
											"key": "questions[3]",
											"value": "QN8",
											"type": "text"
										},
										{
											"key": "updated_by",
											"value": "{{admin_guid}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}tests/remove_question/TS58",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"remove_question",
										"TS58"
									]
								},
								"description": "API to remove one question from a test. Required url parameters are **test guid** and **question guid**."
							},
							"response": []
						},
						{
							"name": "Remove all questions from test",
							"id": "0ee55bdd-3414-45bb-9893-8b18deabb667",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}tests/remove_all_questions/BAS6",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"remove_all_questions",
										"BAS6"
									]
								},
								"description": "API to remove all questions from a test. Required url parameter is test guid."
							},
							"response": []
						}
					],
					"id": "e84c4aab-b07a-468f-b265-4729080ed1c8"
				},
				{
					"name": "Reports",
					"item": [
						{
							"name": "Attempts/Submissions",
							"id": "c1b362ff-dc11-496a-a614-950b00d710a0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "test_guid",
											"value": "TS65",
											"description": "Optional",
											"type": "text"
										},
										{
											"key": "user_guid",
											"value": "CA000019",
											"description": "Optional",
											"type": "text",
											"disabled": true
										},
										{
											"key": "session_id",
											"value": "9083b1d6-668d-5e9b-ab9a-3e0924208255",
											"description": "Optional",
											"type": "text",
											"disabled": true
										},
										{
											"key": "session_id",
											"value": "be78f45411a308b56aee1bfc622cd734",
											"type": "text",
											"disabled": true
										},
										{
											"key": "session_id",
											"value": "rxc4f45411a308b56aee1bfc622cd656",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}tests/submissions",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"submissions"
									]
								},
								"description": "This single API can be used to get 3 different types of responses\n\n1. All attempts (with attempt count) by all students in a test\n    1. Only parameter required in test guid\n2. All attempts by a single student in a test\n    1. Two parameters are required: test guid and user guid\n3. Single attempt by a single student in a test\n    1. Three parameters are required: test guid, user guid and session key\n\nPlz see the examples for more details"
							},
							"response": [
								{
									"id": "484cb9c0-4e49-4ba6-976f-9470abd45452",
									"name": "All attempts by all students in a test",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "user_guid",
													"value": "CA000032",
													"type": "text",
													"disabled": true
												},
												{
													"key": "session_id",
													"value": "9083b1d6-668d-5e9b-ab9a-3e0924208255",
													"type": "text",
													"disabled": true
												},
												{
													"key": "session_id",
													"value": "be78f45411a308b56aee1bfc622cd734",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/tests/submissions/TE000012",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"tests",
												"submissions",
												"TE000012"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 04 Jan 2023 15:56:27 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "280"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"SUBMISSIONS_FOUND\",\n    \"payload\": [\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"guid\": \"CA000032\",\n            \"attempt_count\": \"26\",\n            \"start_time\": \"2022-12-30 07:34:54\",\n            \"submit_time\": \"2022-12-30 07:35:18\",\n            \"expiry_time\": \"2022-12-30 07:35:18\",\n            \"session_id\": \"afb3b090-0785-5b61-8e81-f5bc0234f4f1\"\n        },\n        {\n            \"user_name\": \"Will Smith\",\n            \"guid\": \"CA000033\",\n            \"attempt_count\": \"2\",\n            \"start_time\": \"2022-12-30 11:15:47\",\n            \"submit_time\": \"2022-12-30 11:15:54\",\n            \"expiry_time\": \"2022-12-30 11:15:54\",\n            \"session_id\": \"d3aa598f-4414-5f8e-afd0-df79b033aba2\"\n        }\n    ]\n}"
								},
								{
									"id": "04f62e0a-c5e4-4fa4-ad80-2d578a7a898a",
									"name": "All attempts by a single student in a test",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "user_guid",
													"value": "CA000032",
													"type": "text"
												},
												{
													"key": "session_id",
													"value": "9083b1d6-668d-5e9b-ab9a-3e0924208255",
													"type": "text",
													"disabled": true
												},
												{
													"key": "session_id",
													"value": "be78f45411a308b56aee1bfc622cd734",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/tests/submissions/TE000012",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"tests",
												"submissions",
												"TE000012"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 04 Jan 2023 15:55:30 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "1062"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"SUBMISSIONS_FOUND\",\n    \"payload\": [\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 07:34:54\",\n            \"submit_time\": \"2022-12-30 07:35:18\",\n            \"expiry_time\": \"2022-12-30 07:35:18\",\n            \"session_id\": \"afb3b090-0785-5b61-8e81-f5bc0234f4f1\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:00:52\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"17e69ef5-c7b2-5602-ac4d-87560ea43bea\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:01:19\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"ff348a86-4255-5692-8fb6-8d02ff1c18f2\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:02:07\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"9083b1d6-668d-5e9b-ab9a-3e0924208255\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:02:38\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"2f5de580-be9c-556a-81e0-c731433e4622\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:03:32\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"b7f4cfb2-efd2-51e9-a1a6-f568b2ca1185\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:05:24\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"ac68ed65-be04-5c3e-88db-a145dfb0c24c\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:06:12\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"19562584-c5b2-5b1e-872d-527a265b692e\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:09:20\",\n            \"submit_time\": \"2022-12-30 11:09:48\",\n            \"expiry_time\": \"2022-12-30 11:09:48\",\n            \"session_id\": \"cef78276-d814-586f-bae5-12e2323d46c8\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:10:59\",\n            \"submit_time\": \"2022-12-30 11:11:02\",\n            \"expiry_time\": \"2022-12-30 11:11:02\",\n            \"session_id\": \"74dd7791-f83f-5478-b1b0-8dc0b5b3f4f4\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:13:25\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"971ccb3b-94f4-5c1a-8775-5c270c3cea67\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:13:30\",\n            \"submit_time\": \"2022-12-30 11:13:35\",\n            \"expiry_time\": \"2022-12-30 11:13:35\",\n            \"session_id\": \"92e2a08f-f7b3-5f11-963d-219d502085c1\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:15:00\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"1e6430b7-f8e7-5b90-8e3f-4256671f5c7b\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:15:07\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"a138101a-2192-5b36-b53b-c5f439a54126\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:15:25\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"561825b5-b598-5f96-b802-737c6755088f\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 21:54:24\",\n            \"submit_time\": \"2022-12-30 21:54:43\",\n            \"expiry_time\": \"2022-12-30 21:54:43\",\n            \"session_id\": \"3b874591-9fd5-5638-adec-289502300c1a\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-31 00:07:47\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"2837e813-6d13-5bb5-b28f-e475316de9eb\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-31 00:07:51\",\n            \"submit_time\": \"2022-12-31 00:08:09\",\n            \"expiry_time\": \"2022-12-31 00:08:09\",\n            \"session_id\": \"9229cde5-ad9b-561a-9464-f373f1ce35ce\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-31 06:29:37\",\n            \"submit_time\": \"2022-12-31 06:30:00\",\n            \"expiry_time\": \"2022-12-31 06:30:00\",\n            \"session_id\": \"8961dfeb-1dfa-52ff-82a7-4a3b99931d67\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-31 06:30:09\",\n            \"submit_time\": \"2022-12-31 06:30:23\",\n            \"expiry_time\": \"2022-12-31 06:30:23\",\n            \"session_id\": \"139c8e9d-ccde-5d26-9f75-fe6fdf0d9101\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2023-01-02 07:07:23\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"2d6e0f77-27a2-5c84-8c51-83a8d071741d\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2023-01-04 06:47:35\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"cd164568-e5f1-5ae9-9a12-6dfe532e9f63\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2023-01-04 06:49:05\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"840fbdb9-8940-55e6-88e9-e3f6e7d52539\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2023-01-04 06:49:13\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"5b4b635d-c64a-5e68-9d18-ca07d4911939\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2023-01-04 06:49:32\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"1389057a-4e4d-5283-8f18-f848f20c5c09\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2023-01-04 06:50:19\",\n            \"submit_time\": \"2023-01-04 06:50:51\",\n            \"expiry_time\": \"2023-01-04 06:50:51\",\n            \"session_id\": \"4925ee83-c4c4-5d4f-b266-cb623c531262\"\n        }\n    ],\n    \"attempt_count\": 26\n}"
								},
								{
									"id": "ca79c0e6-9b83-4c1e-b252-8cfafc37322c",
									"name": "Single attempt by a signle student in a test (with session-id)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "user_guid",
													"value": "CA000032",
													"type": "text"
												},
												{
													"key": "session_id",
													"value": "9083b1d6-668d-5e9b-ab9a-3e0924208255",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/tests/submissions/TE000012",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"tests",
												"submissions",
												"TE000012"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 03 Jan 2023 10:27:41 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "191"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"SUBMISSIONS_FOUND\",\n    \"payload\": [\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:02:07\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"9083b1d6-668d-5e9b-ab9a-3e0924208255\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "My submissions",
							"id": "4eed621d-bcfa-48fa-bdfc-bdad6c2c85b0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "user_guid",
											"value": "UR32",
											"type": "text",
											"description": "Required"
										},
										{
											"key": "session_id",
											"value": "9083b1d6-668d-5e9b-ab9a-3e0924208255",
											"type": "text",
											"description": "Optional",
											"disabled": true
										},
										{
											"key": "session_id",
											"value": "be78f45411a308b56aee1bfc622cd734",
											"type": "text",
											"disabled": true
										},
										{
											"key": "test_guid",
											"value": "TS65",
											"description": "Optional",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}tests/my_submissions",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"my_submissions"
									]
								},
								"description": "This single API can be used to get 3 different types of responses\n\n1. All attempts by a single student in a test\n    1. Two parameters are required: test guid and user guid\n2. Single attempt by a single student in a test\n    1. Three parameters are required: test guid, user guid and session key\n\nPlz see the examples for more details"
							},
							"response": [
								{
									"id": "4903549c-cb52-49c1-ab58-0bf73a2a4f21",
									"name": "All attempts by a single student in a test",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "user_guid",
													"value": "CA000032",
													"type": "text"
												},
												{
													"key": "session_id",
													"value": "9083b1d6-668d-5e9b-ab9a-3e0924208255",
													"type": "text",
													"disabled": true
												},
												{
													"key": "session_id",
													"value": "be78f45411a308b56aee1bfc622cd734",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/tests/submissions/TE000012",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"tests",
												"submissions",
												"TE000012"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 04 Jan 2023 15:55:30 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "1062"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"SUBMISSIONS_FOUND\",\n    \"payload\": [\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 07:34:54\",\n            \"submit_time\": \"2022-12-30 07:35:18\",\n            \"expiry_time\": \"2022-12-30 07:35:18\",\n            \"session_id\": \"afb3b090-0785-5b61-8e81-f5bc0234f4f1\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:00:52\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"17e69ef5-c7b2-5602-ac4d-87560ea43bea\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:01:19\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"ff348a86-4255-5692-8fb6-8d02ff1c18f2\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:02:07\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"9083b1d6-668d-5e9b-ab9a-3e0924208255\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:02:38\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"2f5de580-be9c-556a-81e0-c731433e4622\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:03:32\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"b7f4cfb2-efd2-51e9-a1a6-f568b2ca1185\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:05:24\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"ac68ed65-be04-5c3e-88db-a145dfb0c24c\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:06:12\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"19562584-c5b2-5b1e-872d-527a265b692e\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:09:20\",\n            \"submit_time\": \"2022-12-30 11:09:48\",\n            \"expiry_time\": \"2022-12-30 11:09:48\",\n            \"session_id\": \"cef78276-d814-586f-bae5-12e2323d46c8\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:10:59\",\n            \"submit_time\": \"2022-12-30 11:11:02\",\n            \"expiry_time\": \"2022-12-30 11:11:02\",\n            \"session_id\": \"74dd7791-f83f-5478-b1b0-8dc0b5b3f4f4\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:13:25\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"971ccb3b-94f4-5c1a-8775-5c270c3cea67\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:13:30\",\n            \"submit_time\": \"2022-12-30 11:13:35\",\n            \"expiry_time\": \"2022-12-30 11:13:35\",\n            \"session_id\": \"92e2a08f-f7b3-5f11-963d-219d502085c1\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:15:00\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"1e6430b7-f8e7-5b90-8e3f-4256671f5c7b\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:15:07\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"a138101a-2192-5b36-b53b-c5f439a54126\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:15:25\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"561825b5-b598-5f96-b802-737c6755088f\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 21:54:24\",\n            \"submit_time\": \"2022-12-30 21:54:43\",\n            \"expiry_time\": \"2022-12-30 21:54:43\",\n            \"session_id\": \"3b874591-9fd5-5638-adec-289502300c1a\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-31 00:07:47\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"2837e813-6d13-5bb5-b28f-e475316de9eb\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-31 00:07:51\",\n            \"submit_time\": \"2022-12-31 00:08:09\",\n            \"expiry_time\": \"2022-12-31 00:08:09\",\n            \"session_id\": \"9229cde5-ad9b-561a-9464-f373f1ce35ce\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-31 06:29:37\",\n            \"submit_time\": \"2022-12-31 06:30:00\",\n            \"expiry_time\": \"2022-12-31 06:30:00\",\n            \"session_id\": \"8961dfeb-1dfa-52ff-82a7-4a3b99931d67\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-31 06:30:09\",\n            \"submit_time\": \"2022-12-31 06:30:23\",\n            \"expiry_time\": \"2022-12-31 06:30:23\",\n            \"session_id\": \"139c8e9d-ccde-5d26-9f75-fe6fdf0d9101\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2023-01-02 07:07:23\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"2d6e0f77-27a2-5c84-8c51-83a8d071741d\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2023-01-04 06:47:35\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"cd164568-e5f1-5ae9-9a12-6dfe532e9f63\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2023-01-04 06:49:05\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"840fbdb9-8940-55e6-88e9-e3f6e7d52539\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2023-01-04 06:49:13\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"5b4b635d-c64a-5e68-9d18-ca07d4911939\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2023-01-04 06:49:32\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"1389057a-4e4d-5283-8f18-f848f20c5c09\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2023-01-04 06:50:19\",\n            \"submit_time\": \"2023-01-04 06:50:51\",\n            \"expiry_time\": \"2023-01-04 06:50:51\",\n            \"session_id\": \"4925ee83-c4c4-5d4f-b266-cb623c531262\"\n        }\n    ],\n    \"attempt_count\": 26\n}"
								},
								{
									"id": "dae3680b-a6fe-4968-bda8-ab9a7601462c",
									"name": "Single attempt by a signle student in a test (with session-id)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "user_guid",
													"value": "CA000032",
													"type": "text"
												},
												{
													"key": "session_id",
													"value": "9083b1d6-668d-5e9b-ab9a-3e0924208255",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/tests/submissions/TE000012",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"tests",
												"submissions",
												"TE000012"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 03 Jan 2023 10:27:41 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "191"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"SUBMISSIONS_FOUND\",\n    \"payload\": [\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:02:07\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"9083b1d6-668d-5e9b-ab9a-3e0924208255\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Test report",
							"id": "5d4d7b6b-841f-4305-a6d7-32b77b49ff10",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "user_guid",
											"value": "ANK35",
											"type": "text"
										},
										{
											"key": "session_id",
											"value": "be78f45411a308b56aee1bfc622cd734",
											"type": "text",
											"disabled": true
										},
										{
											"key": "session_id",
											"value": "1f576c9d-493f-5323-8d82-2a404b2b831f",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}tests/report/BAS6",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"report",
										"BAS6"
									]
								}
							},
							"response": [
								{
									"id": "40749d3e-ca78-4465-840f-e3c3d5b3c871",
									"name": "Test report",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "user_guid",
													"value": "CA000033",
													"type": "text"
												},
												{
													"key": "session_key",
													"value": "9083b1d6-668d-5e9b-ab9a-3e0924208255",
													"type": "text",
													"disabled": true
												},
												{
													"key": "session_key",
													"value": "be78f45411a308b56aee1bfc622cd734",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/tests/test_report/TE000012",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"tests",
												"test_report",
												"TE000012"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 04 Jan 2023 11:53:22 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "241"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"REPORT_FOUND\",\n    \"payload\": {\n        \"num_correct\": 1,\n        \"num_wrong\": 5,\n        \"num_not_attempted\": 0,\n        \"marks_obtained\": 1,\n        \"result\": \"PASS\",\n        \"answers\": [\n            {\n                \"question_id\": \"6\",\n                \"answer_key\": \"choice_2, choice_3\",\n                \"response\": \"WRONG\"\n            },\n            {\n                \"question_id\": \"7\",\n                \"answer_key\": \"choice_1\",\n                \"response\": \"WRONG\"\n            },\n            {\n                \"question_id\": \"8\",\n                \"answer_key\": \"choice_0, choice_1\",\n                \"response\": \"WRONG\"\n            },\n            {\n                \"question_id\": \"9\",\n                \"answer_key\": \"choice_1, choice_2\",\n                \"response\": \"WRONG\"\n            },\n            {\n                \"question_id\": \"10\",\n                \"answer_key\": \"choice_1\",\n                \"response\": \"WRONG\"\n            },\n            {\n                \"question_id\": \"5\",\n                \"answer_key\": \"choice_0\",\n                \"response\": \"CORRECT\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Tests attempts of a student",
							"id": "4db2ef90-9848-42d2-b90c-5450dba06eda",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "user_guid",
											"value": "UR34",
											"type": "text",
											"description": "Guid of the user taking test "
										}
									]
								},
								"url": {
									"raw": "{{base_url_dev}}tests/attempts/SJT1",
									"host": [
										"{{base_url_dev}}tests"
									],
									"path": [
										"attempts",
										"SJT1"
									]
								},
								"description": "API to start the test. This API will save the details of user who started the test. Details include-\n\nstart time: the time when the test started\n\nsubmit time: time the test was finally submitted (will be NULL initially)\n\nThis API will return **attempt_id**, which will be needed to submit a test"
							},
							"response": [
								{
									"id": "5ee010dd-7c55-40df-9d4f-ce030d3030d4",
									"name": "Take test",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "user_id",
													"value": "CA000033",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/tests/take_test/TE000012",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"tests",
												"take_test",
												"TE000012"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 12 Dec 2022 09:47:14 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "118"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"TEST_STARTED\",\n    \"payload\": [\n        {\n            \"attempt_id\": 1,\n            \"start_time\": \"2022-12-12 03:47:15\"\n        }\n    ]\n}"
								}
							]
						}
					],
					"id": "5bc7c220-1ea3-42bf-a4f6-fc1678c9f063"
				},
				{
					"name": "Questions",
					"item": [
						{
							"name": "Update question",
							"id": "dcb79152-ca6e-476f-acdb-5d41c69034d0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "question",
											"value": "A mixture of 40 L of alcohol and water contains 10% water. How much water should he added to this mixture so that the new mixture contains 20% water?",
											"description": "Required",
											"type": "text"
										},
										{
											"key": "userfile",
											"type": "file",
											"src": "/F:/Download/Project Files/Coaching App/QA6/file-5d1fa7aa72259.png"
										},
										{
											"key": "question_type",
											"value": "mcmc",
											"description": "Required. Accepted values [mcmc, tf, la, comp\nmcmc = Multi Choice\ntf = True Flase\nla = Essay\ncomp = Comprehensive",
											"type": "text"
										},
										{
											"key": "choice[0]",
											"value": "7L",
											"description": "Aleast 1 answer choice is required.. wysiwyg",
											"type": "text"
										},
										{
											"key": "choice[1]",
											"value": "5L",
											"description": "wysiwyg",
											"type": "text"
										},
										{
											"key": "choice[2]",
											"value": "6L",
											"description": "wysiwyg",
											"type": "text"
										},
										{
											"key": "choice[3]",
											"value": "All of the above.",
											"type": "text",
											"disabled": true
										},
										{
											"key": "correct_answer[0]",
											"value": "0",
											"description": "Atleast 1 value required. This is the array to indicate correct answer(s). Array keys should match the keys from choice keys above. \n0 or 1",
											"type": "text"
										},
										{
											"key": "correct_answer[1]",
											"value": "1",
											"description": "0, 1",
											"type": "text"
										},
										{
											"key": "correct_answer[2]",
											"value": "0",
											"description": "0, 1",
											"type": "text"
										},
										{
											"key": "correct_answer[3]",
											"value": "0",
											"type": "text",
											"disabled": true
										},
										{
											"key": "order[0]",
											"value": "1",
											"description": "Default ordering will be according to array values ie ,2,3. Array keys should match the keys from choice keys above",
											"type": "text",
											"disabled": true
										},
										{
											"key": "order[1]",
											"value": "2",
											"description": "Natural number",
											"type": "text",
											"disabled": true
										},
										{
											"key": "order[2]",
											"value": "3",
											"description": "NAtural number",
											"type": "text",
											"disabled": true
										},
										{
											"key": "order[3]",
											"value": "4",
											"type": "text",
											"disabled": true
										},
										{
											"key": "feedback",
											"value": "",
											"description": "Optional. wysiwyg editor",
											"type": "text",
											"disabled": true
										},
										{
											"key": "answer_feedback",
											"value": "",
											"description": "Optional. wysiwyg editor",
											"type": "text",
											"disabled": true
										},
										{
											"key": "marks",
											"value": "1.5",
											"description": "Optional. Positive floating numbers only",
											"type": "text",
											"disabled": true
										},
										{
											"key": "neg_marks",
											"value": "0",
											"description": "Optional. Positive floating numbers only",
											"type": "text",
											"disabled": true
										},
										{
											"key": "time",
											"value": "30",
											"description": "Time in seconds. Natural numbers only",
											"type": "text",
											"disabled": true
										},
										{
											"key": "created_by",
											"value": "UR1",
											"type": "text"
										},
										{
											"key": "parent_id",
											"value": "0",
											"type": "text",
											"description": "Optional. Required only for any sub question for 'comp' type questions",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url_dev}}tests/create_question/SOL57/AMI1622",
									"host": [
										"{{base_url_dev}}tests"
									],
									"path": [
										"create_question",
										"SOL57",
										"AMI1622"
									]
								},
								"description": "This API will add a new question in test and return test GUID and question GUID. Input parameters are\n\n**question**: required, string (html allowed)\n\n**question_type**: required, (values- mcmc = Multi Choice, tf = True False, la = Essay, comp = Comprehension)\n\n**feedback**: string (html allowed), max length 1000 characters\n\n**answer_feedback**: string (html allowed), max length 1000 characters\n\n**marks**: positive integers with float values (0, 1, 2, 3 ...) (0.25, 0.50 etc)\n\n**neg_marks**: positive integers with float values (0, 1, 2, 3 ...) (0.25, 0.50 etc)\n\n**time**: natural numbers (0, 1, 2, 3 ...). \\[unit measured in seconds\\]\n\n**choice**: required, string (html allowed). Input field must be an array eg\n\nchoice\\[0\\] = {value}\n\nchoice\\[1\\] = {value}\n\nchoice\\[2\\] = {value}\n\n**correct_answer**: at least one required, Allowed values- 0 or 1. Input field must be an array eg\n\ncorrect_answer\\[0\\] = {value}\n\ncorrect_answer\\[1\\] = {value}\n\ncorrect_answer\\[2\\] = {value}\n\n**position**: order of answer choices. Values- 1, 2, 3.... Input field must be an array eg\n\nposition\\[0\\] = {value} 1 or NULL\n\nposition\\[1\\] = {value} 2 or NULL\n\nposition\\[2\\] = {value} 3 or NULL\n\n**status**: 0 = Unpublished, 1 = Published\n\n**created_by**: user guid"
							},
							"response": [
								{
									"id": "e0c8f7b4-d23b-4ea3-b9ac-f9aa0c7f2558",
									"name": "Add question",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "question",
													"value": "What is the capital of Britain?",
													"type": "text"
												},
												{
													"key": "question_type",
													"value": "mcsc",
													"type": "text"
												},
												{
													"key": "feedback",
													"value": "none",
													"type": "text"
												},
												{
													"key": "answer_feedback",
													"value": "",
													"type": "text"
												},
												{
													"key": "marks",
													"value": "1",
													"type": "text"
												},
												{
													"key": "neg_marks",
													"value": "0",
													"type": "text"
												},
												{
													"key": "time",
													"value": "30",
													"type": "text"
												},
												{
													"key": "status",
													"value": "1",
													"type": "text"
												},
												{
													"key": "created_by",
													"value": "CA000030",
													"type": "text"
												},
												{
													"key": "choice[0]",
													"value": "London",
													"type": "text"
												},
												{
													"key": "choice[1]",
													"value": "Bristol",
													"type": "text"
												},
												{
													"key": "choice[2]",
													"value": "Manchester",
													"type": "text"
												},
												{
													"key": "correct_answer[0]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "correct_answer[1]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "correct_answer[2]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "order[0]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "order[1]",
													"value": "2",
													"type": "text"
												},
												{
													"key": "order[2]",
													"value": "3",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/tests/create_question/TE00008",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"tests",
												"create_question",
												"TE00008"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 05 Dec 2022 12:28:07 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "117"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"QUESTION_ADDED_SUCCESSFULLY\",\n    \"payload\": {\n        \"test_id\": \"TE00008\",\n        \"question_id\": \"QA00008\"\n    }\n}"
								}
							]
						},
						{
							"name": "Upload file",
							"id": "c70f5c2c-8743-495e-b701-acaf8107733c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "userfile",
											"type": "file",
											"src": "/F:/Download/Project Files/Coaching App/QA6/paralelogram.jpg"
										},
										{
											"key": "created_by",
											"value": "UR1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url_dev}}tests/upload_file/FOR1660",
									"host": [
										"{{base_url_dev}}tests"
									],
									"path": [
										"upload_file",
										"FOR1660"
									]
								},
								"description": "This API will add a new question in test and return test GUID and question GUID. Input parameters are\n\n**question**: required, string (html allowed)\n\n**question_type**: required, (values- mcmc = Multi Choice, tf = True False, la = Essay, comp = Comprehension)\n\n**feedback**: string (html allowed), max length 1000 characters\n\n**answer_feedback**: string (html allowed), max length 1000 characters\n\n**marks**: positive integers with float values (0, 1, 2, 3 ...) (0.25, 0.50 etc)\n\n**neg_marks**: positive integers with float values (0, 1, 2, 3 ...) (0.25, 0.50 etc)\n\n**time**: natural numbers (0, 1, 2, 3 ...). \\[unit measured in seconds\\]\n\n**choice**: required, string (html allowed). Input field must be an array eg\n\nchoice\\[0\\] = {value}\n\nchoice\\[1\\] = {value}\n\nchoice\\[2\\] = {value}\n\n**correct_answer**: at least one required, Allowed values- 0 or 1. Input field must be an array eg\n\ncorrect_answer\\[0\\] = {value}\n\ncorrect_answer\\[1\\] = {value}\n\ncorrect_answer\\[2\\] = {value}\n\n**position**: order of answer choices. Values- 1, 2, 3.... Input field must be an array eg\n\nposition\\[0\\] = {value} 1 or NULL\n\nposition\\[1\\] = {value} 2 or NULL\n\nposition\\[2\\] = {value} 3 or NULL\n\n**status**: 0 = Unpublished, 1 = Published\n\n**created_by**: user guid"
							},
							"response": [
								{
									"id": "54f6f7be-f720-4b12-9db3-89615bd32f23",
									"name": "Add question",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "question",
													"value": "What is the capital of Britain?",
													"type": "text"
												},
												{
													"key": "question_type",
													"value": "mcsc",
													"type": "text"
												},
												{
													"key": "feedback",
													"value": "none",
													"type": "text"
												},
												{
													"key": "answer_feedback",
													"value": "",
													"type": "text"
												},
												{
													"key": "marks",
													"value": "1",
													"type": "text"
												},
												{
													"key": "neg_marks",
													"value": "0",
													"type": "text"
												},
												{
													"key": "time",
													"value": "30",
													"type": "text"
												},
												{
													"key": "status",
													"value": "1",
													"type": "text"
												},
												{
													"key": "created_by",
													"value": "CA000030",
													"type": "text"
												},
												{
													"key": "choice[0]",
													"value": "London",
													"type": "text"
												},
												{
													"key": "choice[1]",
													"value": "Bristol",
													"type": "text"
												},
												{
													"key": "choice[2]",
													"value": "Manchester",
													"type": "text"
												},
												{
													"key": "correct_answer[0]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "correct_answer[1]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "correct_answer[2]",
													"value": "0",
													"type": "text"
												},
												{
													"key": "order[0]",
													"value": "1",
													"type": "text"
												},
												{
													"key": "order[1]",
													"value": "2",
													"type": "text"
												},
												{
													"key": "order[2]",
													"value": "3",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/tests/create_question/TE00008",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"tests",
												"create_question",
												"TE00008"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 05 Dec 2022 12:28:07 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "117"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"QUESTION_ADDED_SUCCESSFULLY\",\n    \"payload\": {\n        \"test_id\": \"TE00008\",\n        \"question_id\": \"QA00008\"\n    }\n}"
								}
							]
						},
						{
							"name": "Get question details",
							"id": "5af5d35f-de38-4efe-8a16-f8e460c7c2b7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url_dev}}tests/get_question/STC2/1",
									"host": [
										"{{base_url_dev}}tests"
									],
									"path": [
										"get_question",
										"STC2",
										"1"
									]
								},
								"description": "This API will take two parameters in the URL\n\n1. question guid (required)\n2. choices (0, 1)\n    \n\nThe second parameter choices is for whether answer choices are also needed with the question."
							},
							"response": [
								{
									"id": "c381ceb9-58ba-4b41-8d77-7ae165954857",
									"name": "Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/tests/get_question/QA00006/1",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"tests",
												"get_question",
												"QA00006",
												"1"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 06 Dec 2022 10:29:06 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "303"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"QUESTION_FOUND\",\n    \"payload\": [\n        {\n            \"question\": {\n                \"ID\": \"6\",\n                \"guid\": \"QA00006\",\n                \"question\": \"What is the capital of India?\",\n                \"question_type\": \"mcsc\",\n                \"feedback\": \"none\",\n                \"answer_feedback\": \"\",\n                \"marks\": \"1\",\n                \"neg_marks\": \"0\",\n                \"time\": \"30\",\n                \"status\": \"1\",\n                \"created_by\": \"CA000030\",\n                \"created_on\": \"2022-12-05 05:27:56\"\n            },\n            \"choices\": [\n                {\n                    \"choice\": \"Chennai\",\n                    \"correct_answer\": \"1\",\n                    \"status\": \"1\",\n                    \"position\": \"1\"\n                },\n                {\n                    \"choice\": \"Lucknow\",\n                    \"correct_answer\": \"0\",\n                    \"status\": \"1\",\n                    \"position\": \"2\"\n                },\n                {\n                    \"choice\": \"New Delhi\",\n                    \"correct_answer\": \"0\",\n                    \"status\": \"1\",\n                    \"position\": \"3\"\n                }\n            ]\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Get file",
							"id": "736d23d6-fd3a-4b63-9e61-648200cc4f6c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}tests/get_file?file_hash=1682000753_3b6c97e0d04c4e4d1856.jpg",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"get_file"
									],
									"query": [
										{
											"key": "file_hash",
											"value": "1682000753_3b6c97e0d04c4e4d1856.jpg",
											"description": "Required. Hash value of the file"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search question",
							"id": "95ee6866-7086-4b54-97b6-ad00b726eed7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "search",
											"value": "In the following passage some words",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url_dev}}tests/find_question/SJT1",
									"host": [
										"{{base_url_dev}}tests"
									],
									"path": [
										"find_question",
										"SJT1"
									]
								}
							},
							"response": []
						}
					],
					"id": "14e5f883-b6eb-406d-803a-0224bff86214"
				},
				{
					"name": "Enrolments",
					"item": [
						{
							"name": "Get list of enroled users",
							"id": "79d0159a-16e4-4a06-9937-5169e1ab2cd1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{base_url_dev}}/tests/enrolments/LIS39",
									"host": [
										"{{base_url_dev}}"
									],
									"path": [
										"tests",
										"enrolments",
										"LIS39"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get list of not enroled users",
							"id": "85236074-8052-4835-8841-22cd802646e8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "role",
											"value": "admin",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url_dev}}/tests/notenroled/SJT1",
									"host": [
										"{{base_url_dev}}"
									],
									"path": [
										"tests",
										"notenroled",
										"SJT1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Enrol users in test",
							"id": "59f38498-df66-41cd-8c5c-05f1236df430",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "users[0]",
											"value": "UR2",
											"type": "text"
										},
										{
											"key": "users[1]",
											"value": "UR3",
											"type": "text"
										},
										{
											"key": "users[2]",
											"value": "UR4",
											"type": "text"
										},
										{
											"key": "users[3]",
											"value": "CA000016",
											"type": "text",
											"disabled": true
										},
										{
											"key": "users[4]",
											"value": "CA000017",
											"type": "text",
											"disabled": true
										},
										{
											"key": "users[5]",
											"value": "CA000018",
											"type": "text",
											"disabled": true
										},
										{
											"key": "start_date",
											"value": "2023-08-18 09:00:00",
											"type": "text"
										},
										{
											"key": "end_date",
											"value": "2023-08-25 10:00:00",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url_dev}}tests/enrol/SEL68",
									"host": [
										"{{base_url_dev}}tests"
									],
									"path": [
										"enrol",
										"SEL68"
									]
								}
							},
							"response": []
						},
						{
							"name": "Unenrol users",
							"id": "80d727d3-e08a-481f-a201-db357062b8f3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "users[0]",
											"value": "UR30",
											"type": "text"
										},
										{
											"key": "users[1]",
											"value": "CA000014",
											"type": "text",
											"disabled": true
										},
										{
											"key": "users[2]",
											"value": "CA000015",
											"type": "text",
											"disabled": true
										},
										{
											"key": "users[3]",
											"value": "CA000016",
											"type": "text",
											"disabled": true
										},
										{
											"key": "users[4]",
											"value": "UR29",
											"type": "text"
										},
										{
											"key": "users[5]",
											"value": "CA000018",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url_dev}}tests/unenrol/SJT1",
									"host": [
										"{{base_url_dev}}tests"
									],
									"path": [
										"unenrol",
										"SJT1"
									]
								}
							},
							"response": []
						}
					],
					"id": "3cb47f41-1ca5-44c4-8d5c-b434f2a2fe0e"
				},
				{
					"name": "Analytics",
					"item": [
						{
							"name": "Get all ongoing and upcoming tests",
							"id": "3a16c727-fa97-4d2d-8324-1a16195b37f1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "type",
											"value": "ongoing",
											"description": "Optional. Values[ongoing, upcoming]",
											"type": "text"
										},
										{
											"key": "status",
											"value": "",
											"description": "Optional. Values[0,1]",
											"type": "text"
										},
										{
											"key": "limit",
											"value": "",
											"description": "Optional. Any positive numeric value ",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url_dev}}tests/analytics/list",
									"host": [
										"{{base_url_dev}}tests"
									],
									"path": [
										"analytics",
										"list"
									]
								}
							},
							"response": []
						}
					],
					"id": "fa20dce4-8f53-4745-80d1-9dd2586f5c4b"
				},
				{
					"name": "Categories",
					"item": [
						{
							"name": "Create new test category",
							"id": "db79f341-df6f-4a95-9bd9-033c618a25fa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Preposition",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url_dev}}tests/create_category",
									"host": [
										"{{base_url_dev}}tests"
									],
									"path": [
										"create_category"
									]
								}
							},
							"response": []
						},
						{
							"name": "Link tests to categories",
							"id": "6f55f23d-a05b-46c4-a44b-14f2e576fce7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "tests[0]",
											"value": "GLQ33",
											"type": "text"
										},
										{
											"key": "tests[1]",
											"value": "TS25",
											"type": "text"
										},
										{
											"key": "categories[0]",
											"value": "ENG11",
											"type": "text"
										},
										{
											"key": "tests[2]",
											"value": "TS26",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url_dev}}tests/add_tests_to_categories",
									"host": [
										"{{base_url_dev}}tests"
									],
									"path": [
										"add_tests_to_categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all test categories",
							"id": "021b2a41-36c8-4ad8-aee3-465df14193c3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{base_url_dev}}tests/categories",
									"host": [
										"{{base_url_dev}}tests"
									],
									"path": [
										"categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get tests in a category",
							"id": "66fce202-7019-4302-9376-b29ee83ac580",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{base_url_dev}}tests/get_tests_in_category/ENG11",
									"host": [
										"{{base_url_dev}}tests"
									],
									"path": [
										"get_tests_in_category",
										"ENG11"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get category details",
							"id": "dadf0f86-81e6-4f0e-8a00-9bedbd7fc7db",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{base_url_dev}}tests/get_category/CAO2",
									"host": [
										"{{base_url_dev}}tests"
									],
									"path": [
										"get_category",
										"CAO2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete categories",
							"id": "88ed444c-591e-4004-aef0-9bcd05016de2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "categories[0]",
											"value": "TER10",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url_dev}}tests/delete_categories",
									"host": [
										"{{base_url_dev}}tests"
									],
									"path": [
										"delete_categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Unlink test from category",
							"id": "a99c5db0-5c91-499a-a7f0-0c94b1258931",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "test_guid",
											"value": "SJT1",
											"type": "text"
										},
										{
											"key": "category_guid",
											"value": "ADJ1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url_dev}}tests/unlink_category",
									"host": [
										"{{base_url_dev}}tests"
									],
									"path": [
										"unlink_category"
									]
								}
							},
							"response": []
						}
					],
					"id": "015c50a7-22d1-4af3-afc0-16252f52c484"
				},
				{
					"name": "Learner",
					"item": [
						{
							"name": "My tests",
							"id": "fce2322e-de3c-4bbe-97ba-93ef776de86a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}tests/my_enrolments/ASI27",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"my_enrolments",
										"ASI27"
									]
								},
								"description": "This API returns records of all tests. no parameters required"
							},
							"response": [
								{
									"id": "4472dd4f-808c-4e03-b1a2-b0e51868fe86",
									"name": "Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/tests/browse_tests",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"tests",
												"browse_tests"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 05 Jan 2023 05:52:35 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "624"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"TESTS_FOUND\",\n    \"payload\": {\n        \"meta\": {\n            \"first_page\": 1,\n            \"last_page\": 1,\n            \"current_page\": 1,\n            \"num_results\": 11,\n            \"total_results\": 12\n        },\n        \"data\": [\n            {\n                \"guid\": \"TE00001\",\n                \"title\": \"Demo test\",\n                \"details\": \"demo details\",\n                \"instructions\": \"demo instructions.\",\n                \"status\": \"1\",\n                \"created_on\": \"2022-11-21 09:05:14\"\n            },\n            {\n                \"guid\": \"TE00003\",\n                \"title\": \"English test\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"1\",\n                \"created_on\": \"2022-11-21 09:11:40\"\n            },\n            {\n                \"guid\": \"TE000014\",\n                \"title\": \"first test\",\n                \"details\": \"lkasjlkjsdflkjaslkjslkjlk\",\n                \"instructions\": \"oiuiewruiovbcnlkuioxcvpuew  ioerwutieur iueijvclki i utiorew oijvklsd gjioer tw vdsg \",\n                \"status\": \"1\",\n                \"created_on\": \"2022-12-02 14:21:31\"\n            },\n            {\n                \"guid\": \"TE00002\",\n                \"title\": \"Mathematics test\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"1\",\n                \"created_on\": \"2022-11-21 09:11:18\"\n            },\n            {\n                \"guid\": \"TE000012\",\n                \"title\": \"New English Exam\",\n                \"details\": \"This is <font color=\\\"#ff0051\\\">example</font> detail for this test.\",\n                \"instructions\": \"These are some <font color=\\\"#eb00ff\\\">instructions</font> for this test.\",\n                \"status\": \"1\",\n                \"created_on\": \"2022-12-02 05:39:54\"\n            },\n            {\n                \"guid\": \"TE00005\",\n                \"title\": \"New GK test\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"1\",\n                \"created_on\": \"2022-11-21 09:12:21\"\n            },\n            {\n                \"guid\": \"TE000013\",\n                \"title\": \"Reandom\",\n                \"details\": \"<p>Yygg <b><u><i>gfdgfddfg</i></u></b></p><p>gdddg <b><font color=\\\"#934747\\\">what</font></b> hhhh huh huh</p>\",\n                \"instructions\": \"Terst\",\n                \"status\": \"1\",\n                \"created_on\": \"2022-12-02 14:19:24\"\n            },\n            {\n                \"guid\": \"TE00004\",\n                \"title\": \"Science test for kids\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"1\",\n                \"created_on\": \"2022-11-21 09:11:52\"\n            },\n            {\n                \"guid\": \"TE00007\",\n                \"title\": \"Second term exams\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"1\",\n                \"created_on\": \"2022-11-21 09:51:34\"\n            },\n            {\n                \"guid\": \"TE00010\",\n                \"title\": \"Third term exams\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"1\",\n                \"created_on\": \"2022-12-02 05:24:31\"\n            },\n            {\n                \"guid\": \"TE000011\",\n                \"title\": \"Third term exams\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"1\",\n                \"created_on\": \"2022-12-02 05:25:02\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Browse tests",
							"id": "35696128-304e-484b-b81d-0afa31df17df",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}tests/browse_tests",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"browse_tests"
									]
								},
								"description": "This API returns records of all tests. no parameters required"
							},
							"response": [
								{
									"id": "462f1629-3241-4461-a4a3-3cf9879817d7",
									"name": "Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/tests/browse_tests",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"tests",
												"browse_tests"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 05 Jan 2023 05:52:35 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "624"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"TESTS_FOUND\",\n    \"payload\": {\n        \"meta\": {\n            \"first_page\": 1,\n            \"last_page\": 1,\n            \"current_page\": 1,\n            \"num_results\": 11,\n            \"total_results\": 12\n        },\n        \"data\": [\n            {\n                \"guid\": \"TE00001\",\n                \"title\": \"Demo test\",\n                \"details\": \"demo details\",\n                \"instructions\": \"demo instructions.\",\n                \"status\": \"1\",\n                \"created_on\": \"2022-11-21 09:05:14\"\n            },\n            {\n                \"guid\": \"TE00003\",\n                \"title\": \"English test\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"1\",\n                \"created_on\": \"2022-11-21 09:11:40\"\n            },\n            {\n                \"guid\": \"TE000014\",\n                \"title\": \"first test\",\n                \"details\": \"lkasjlkjsdflkjaslkjslkjlk\",\n                \"instructions\": \"oiuiewruiovbcnlkuioxcvpuew  ioerwutieur iueijvclki i utiorew oijvklsd gjioer tw vdsg \",\n                \"status\": \"1\",\n                \"created_on\": \"2022-12-02 14:21:31\"\n            },\n            {\n                \"guid\": \"TE00002\",\n                \"title\": \"Mathematics test\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"1\",\n                \"created_on\": \"2022-11-21 09:11:18\"\n            },\n            {\n                \"guid\": \"TE000012\",\n                \"title\": \"New English Exam\",\n                \"details\": \"This is <font color=\\\"#ff0051\\\">example</font> detail for this test.\",\n                \"instructions\": \"These are some <font color=\\\"#eb00ff\\\">instructions</font> for this test.\",\n                \"status\": \"1\",\n                \"created_on\": \"2022-12-02 05:39:54\"\n            },\n            {\n                \"guid\": \"TE00005\",\n                \"title\": \"New GK test\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"1\",\n                \"created_on\": \"2022-11-21 09:12:21\"\n            },\n            {\n                \"guid\": \"TE000013\",\n                \"title\": \"Reandom\",\n                \"details\": \"<p>Yygg <b><u><i>gfdgfddfg</i></u></b></p><p>gdddg <b><font color=\\\"#934747\\\">what</font></b> hhhh huh huh</p>\",\n                \"instructions\": \"Terst\",\n                \"status\": \"1\",\n                \"created_on\": \"2022-12-02 14:19:24\"\n            },\n            {\n                \"guid\": \"TE00004\",\n                \"title\": \"Science test for kids\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"1\",\n                \"created_on\": \"2022-11-21 09:11:52\"\n            },\n            {\n                \"guid\": \"TE00007\",\n                \"title\": \"Second term exams\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"1\",\n                \"created_on\": \"2022-11-21 09:51:34\"\n            },\n            {\n                \"guid\": \"TE00010\",\n                \"title\": \"Third term exams\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"1\",\n                \"created_on\": \"2022-12-02 05:24:31\"\n            },\n            {\n                \"guid\": \"TE000011\",\n                \"title\": \"Third term exams\",\n                \"details\": \"\",\n                \"instructions\": \"\",\n                \"status\": \"1\",\n                \"created_on\": \"2022-12-02 05:25:02\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Take test",
							"id": "f730d2a3-f5a1-49fd-a317-b083d5065535",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "user_guid",
											"value": "ASI27",
											"type": "text",
											"description": "Guid of the user taking test "
										},
										{
											"key": "set_session",
											"value": "abcd1234",
											"description": "REquired. A unique hash value for each test attempt by a user. This must be a unique value every time we start a test.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}tests/take_test/MAT59",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"take_test",
										"MAT59"
									]
								},
								"description": "API to start the test. This API will save the details of user who started the test. Details include-\n\nstart time: the time when the test started\n\nsubmit time: time the test was finally submitted (will be NULL initially)\n\nThis API will return **attempt_id**, which will be needed to submit a test"
							},
							"response": [
								{
									"id": "5653fd63-f09f-4db2-999a-df037d5e6307",
									"name": "Take test",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "user_id",
													"value": "CA000033",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/tests/take_test/TE000012",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"tests",
												"take_test",
												"TE000012"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 12 Dec 2022 09:47:14 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "118"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"TEST_STARTED\",\n    \"payload\": [\n        {\n            \"attempt_id\": 1,\n            \"start_time\": \"2022-12-12 03:47:15\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Submit single question during test",
							"id": "f0a4cc78-d050-4778-b28d-ebb2cd0034d5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "user_guid",
											"value": "",
											"description": "User guid",
											"type": "text"
										},
										{
											"key": "session_id",
											"value": "",
											"description": "Test session id",
											"type": "text"
										},
										{
											"key": "answer[PIP57]",
											"value": "choice_0",
											"description": "Answer array. Key is question guid, value is answer choice selected",
											"type": "text"
										},
										{
											"key": "time_taken",
											"value": "30",
											"description": "Time taken in seconds to answer the question",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}tests/save_question/BAS6",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"save_question",
										"BAS6"
									]
								}
							},
							"response": []
						},
						{
							"name": "Submit test",
							"id": "e7d60d9c-feec-43a7-8614-87eb91011aef",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "user_guid",
											"value": "ASI27",
											"description": "Guid of the user submitting test",
											"type": "text"
										},
										{
											"key": "set_session",
											"value": "abcd1234",
											"description": "Hash value given on the take_test page",
											"type": "text"
										},
										{
											"key": "answer[IX91654]",
											"value": "choice_0",
											"type": "text"
										},
										{
											"key": "answer[I6X1655]",
											"value": "choice_2, choice_3",
											"type": "text"
										},
										{
											"key": "answer[PHA1483]",
											"value": "choice_1",
											"type": "text",
											"disabled": true
										},
										{
											"key": "answer[PNA1484]",
											"value": "choice_0",
											"type": "text",
											"disabled": true
										},
										{
											"key": "answer[PRY1485]",
											"value": "choice_3",
											"type": "text",
											"disabled": true
										},
										{
											"key": "answer[23]",
											"value": "choice_1",
											"type": "text",
											"disabled": true
										},
										{
											"key": "answer[24]",
											"value": "choice_2",
											"type": "text",
											"disabled": true
										},
										{
											"key": "answer[25]",
											"value": "choice_2",
											"type": "text",
											"disabled": true
										},
										{
											"key": "answer[26]",
											"value": "choice_2",
											"type": "text",
											"disabled": true
										},
										{
											"key": "answer[27]",
											"value": "choice_2",
											"type": "text",
											"disabled": true
										},
										{
											"key": "answer[28]",
											"value": "choice_2",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}tests/submit_test/MAT59",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"submit_test",
										"MAT59"
									]
								}
							},
							"response": []
						},
						{
							"name": "My test submissions",
							"id": "d3790f20-b04f-4e4f-877e-9d395fc8193e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "user_guid",
											"value": "UR32",
											"type": "text",
											"description": "Required"
										},
										{
											"key": "session_id",
											"value": "9083b1d6-668d-5e9b-ab9a-3e0924208255",
											"type": "text",
											"description": "Optional",
											"disabled": true
										},
										{
											"key": "session_id",
											"value": "be78f45411a308b56aee1bfc622cd734",
											"type": "text",
											"disabled": true
										},
										{
											"key": "test_guid",
											"value": "TS65",
											"description": "Optional",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}tests/my_submissions",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"my_submissions"
									]
								},
								"description": "This single API can be used to get 3 different types of responses\n\n1. All attempts by a single student in a test\n    1. Two parameters are required: test guid and user guid\n2. Single attempt by a single student in a test\n    1. Three parameters are required: test guid, user guid and session key\n\nPlz see the examples for more details"
							},
							"response": [
								{
									"id": "5b24cecb-c84c-4750-b874-9fe33687766e",
									"name": "All attempts by a single student in a test",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "user_guid",
													"value": "CA000032",
													"type": "text"
												},
												{
													"key": "session_id",
													"value": "9083b1d6-668d-5e9b-ab9a-3e0924208255",
													"type": "text",
													"disabled": true
												},
												{
													"key": "session_id",
													"value": "be78f45411a308b56aee1bfc622cd734",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/tests/submissions/TE000012",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"tests",
												"submissions",
												"TE000012"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 04 Jan 2023 15:55:30 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "1062"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"SUBMISSIONS_FOUND\",\n    \"payload\": [\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 07:34:54\",\n            \"submit_time\": \"2022-12-30 07:35:18\",\n            \"expiry_time\": \"2022-12-30 07:35:18\",\n            \"session_id\": \"afb3b090-0785-5b61-8e81-f5bc0234f4f1\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:00:52\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"17e69ef5-c7b2-5602-ac4d-87560ea43bea\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:01:19\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"ff348a86-4255-5692-8fb6-8d02ff1c18f2\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:02:07\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"9083b1d6-668d-5e9b-ab9a-3e0924208255\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:02:38\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"2f5de580-be9c-556a-81e0-c731433e4622\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:03:32\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"b7f4cfb2-efd2-51e9-a1a6-f568b2ca1185\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:05:24\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"ac68ed65-be04-5c3e-88db-a145dfb0c24c\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:06:12\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"19562584-c5b2-5b1e-872d-527a265b692e\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:09:20\",\n            \"submit_time\": \"2022-12-30 11:09:48\",\n            \"expiry_time\": \"2022-12-30 11:09:48\",\n            \"session_id\": \"cef78276-d814-586f-bae5-12e2323d46c8\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:10:59\",\n            \"submit_time\": \"2022-12-30 11:11:02\",\n            \"expiry_time\": \"2022-12-30 11:11:02\",\n            \"session_id\": \"74dd7791-f83f-5478-b1b0-8dc0b5b3f4f4\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:13:25\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"971ccb3b-94f4-5c1a-8775-5c270c3cea67\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:13:30\",\n            \"submit_time\": \"2022-12-30 11:13:35\",\n            \"expiry_time\": \"2022-12-30 11:13:35\",\n            \"session_id\": \"92e2a08f-f7b3-5f11-963d-219d502085c1\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:15:00\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"1e6430b7-f8e7-5b90-8e3f-4256671f5c7b\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:15:07\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"a138101a-2192-5b36-b53b-c5f439a54126\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:15:25\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"561825b5-b598-5f96-b802-737c6755088f\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 21:54:24\",\n            \"submit_time\": \"2022-12-30 21:54:43\",\n            \"expiry_time\": \"2022-12-30 21:54:43\",\n            \"session_id\": \"3b874591-9fd5-5638-adec-289502300c1a\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-31 00:07:47\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"2837e813-6d13-5bb5-b28f-e475316de9eb\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-31 00:07:51\",\n            \"submit_time\": \"2022-12-31 00:08:09\",\n            \"expiry_time\": \"2022-12-31 00:08:09\",\n            \"session_id\": \"9229cde5-ad9b-561a-9464-f373f1ce35ce\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-31 06:29:37\",\n            \"submit_time\": \"2022-12-31 06:30:00\",\n            \"expiry_time\": \"2022-12-31 06:30:00\",\n            \"session_id\": \"8961dfeb-1dfa-52ff-82a7-4a3b99931d67\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-31 06:30:09\",\n            \"submit_time\": \"2022-12-31 06:30:23\",\n            \"expiry_time\": \"2022-12-31 06:30:23\",\n            \"session_id\": \"139c8e9d-ccde-5d26-9f75-fe6fdf0d9101\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2023-01-02 07:07:23\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"2d6e0f77-27a2-5c84-8c51-83a8d071741d\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2023-01-04 06:47:35\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"cd164568-e5f1-5ae9-9a12-6dfe532e9f63\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2023-01-04 06:49:05\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"840fbdb9-8940-55e6-88e9-e3f6e7d52539\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2023-01-04 06:49:13\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"5b4b635d-c64a-5e68-9d18-ca07d4911939\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2023-01-04 06:49:32\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"1389057a-4e4d-5283-8f18-f848f20c5c09\"\n        },\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2023-01-04 06:50:19\",\n            \"submit_time\": \"2023-01-04 06:50:51\",\n            \"expiry_time\": \"2023-01-04 06:50:51\",\n            \"session_id\": \"4925ee83-c4c4-5d4f-b266-cb623c531262\"\n        }\n    ],\n    \"attempt_count\": 26\n}"
								},
								{
									"id": "b086d080-fb0c-47ef-a122-5451f537317d",
									"name": "Single attempt by a signle student in a test (with session-id)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "user_guid",
													"value": "CA000032",
													"type": "text"
												},
												{
													"key": "session_id",
													"value": "9083b1d6-668d-5e9b-ab9a-3e0924208255",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/tests/submissions/TE000012",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"tests",
												"submissions",
												"TE000012"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 03 Jan 2023 10:27:41 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "191"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"SUBMISSIONS_FOUND\",\n    \"payload\": [\n        {\n            \"user_name\": \"Bruce Willis\",\n            \"start_time\": \"2022-12-30 11:02:07\",\n            \"submit_time\": null,\n            \"expiry_time\": null,\n            \"session_id\": \"9083b1d6-668d-5e9b-ab9a-3e0924208255\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "My test attempts",
							"id": "2a786b69-39cd-4761-bd7b-ea2bfc2ea3cc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "user_guid",
											"value": "UR34",
											"type": "text",
											"description": "Guid of the user taking test "
										}
									]
								},
								"url": {
									"raw": "{{base_url}}tests/attempts/TS66",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"attempts",
										"TS66"
									]
								},
								"description": "API to start the test. This API will save the details of user who started the test. Details include-\n\nstart time: the time when the test started\n\nsubmit time: time the test was finally submitted (will be NULL initially)\n\nThis API will return **attempt_id**, which will be needed to submit a test"
							},
							"response": [
								{
									"id": "5de96412-4904-4945-b778-40779053f106",
									"name": "Take test",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "user_id",
													"value": "CA000033",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/tests/take_test/TE000012",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"tests",
												"take_test",
												"TE000012"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 12 Dec 2022 09:47:14 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "118"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"TEST_STARTED\",\n    \"payload\": [\n        {\n            \"attempt_id\": 1,\n            \"start_time\": \"2022-12-12 03:47:15\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Test report",
							"id": "71a13f37-27d7-4926-a7a3-76cab8740864",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "user_guid",
											"value": "UR44",
											"type": "text"
										},
										{
											"key": "session_id",
											"value": "be78f45411a308b56aee1bfc622cd734",
											"type": "text",
											"disabled": true
										},
										{
											"key": "session_id",
											"value": "1f576c9d-493f-5323-8d82-2a404b2b831f",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}tests/report/TS65",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"report",
										"TS65"
									]
								}
							},
							"response": [
								{
									"id": "2239b7dd-37eb-4165-835b-d18411d605a9",
									"name": "Test report",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "user_guid",
													"value": "CA000033",
													"type": "text"
												},
												{
													"key": "session_key",
													"value": "9083b1d6-668d-5e9b-ab9a-3e0924208255",
													"type": "text",
													"disabled": true
												},
												{
													"key": "session_key",
													"value": "be78f45411a308b56aee1bfc622cd734",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/tests/test_report/TE000012",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"tests",
												"test_report",
												"TE000012"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 04 Jan 2023 11:53:22 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "241"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"REPORT_FOUND\",\n    \"payload\": {\n        \"num_correct\": 1,\n        \"num_wrong\": 5,\n        \"num_not_attempted\": 0,\n        \"marks_obtained\": 1,\n        \"result\": \"PASS\",\n        \"answers\": [\n            {\n                \"question_id\": \"6\",\n                \"answer_key\": \"choice_2, choice_3\",\n                \"response\": \"WRONG\"\n            },\n            {\n                \"question_id\": \"7\",\n                \"answer_key\": \"choice_1\",\n                \"response\": \"WRONG\"\n            },\n            {\n                \"question_id\": \"8\",\n                \"answer_key\": \"choice_0, choice_1\",\n                \"response\": \"WRONG\"\n            },\n            {\n                \"question_id\": \"9\",\n                \"answer_key\": \"choice_1, choice_2\",\n                \"response\": \"WRONG\"\n            },\n            {\n                \"question_id\": \"10\",\n                \"answer_key\": \"choice_1\",\n                \"response\": \"WRONG\"\n            },\n            {\n                \"question_id\": \"5\",\n                \"answer_key\": \"choice_0\",\n                \"response\": \"CORRECT\"\n            }\n        ]\n    }\n}"
								}
							]
						}
					],
					"id": "e3a3d803-ee98-4f9f-b91e-bf87c551e677"
				},
				{
					"name": "Bookmarks",
					"item": [
						{
							"name": "Bookmark question",
							"id": "2108a644-107f-4cd8-8fb8-32a843cccf92",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "test_guid",
											"value": "BAS6",
											"type": "text"
										},
										{
											"key": "question_guid",
											"value": "ANA55",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}tests/bookmark/add",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"bookmark",
										"add"
									]
								}
							},
							"response": []
						},
						{
							"name": "My bookmarks",
							"id": "f855015e-a286-4ae8-be85-9bc22000cf5b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "test_guid",
											"value": "",
											"description": "Optional filter.",
											"type": "text"
										},
										{
											"key": "search",
											"value": "",
											"description": "Optional filter.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}tests/bookmark/list",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"bookmark",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "View bookmark",
							"id": "40588568-b3ff-4cf0-813a-dc314a2c8b3d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{base_url}}tests/bookmark/PIP57/view",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"bookmark",
										"PIP57",
										"view"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete bookmark",
							"id": "69b98f83-599b-45c6-ab0c-751a2844c3d4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "test_guid",
											"value": "BAS6",
											"description": "Required",
											"type": "text"
										},
										{
											"key": "question_guid",
											"value": "ANA55",
											"description": "Required",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}tests/bookmark/delete",
									"host": [
										"{{base_url}}tests"
									],
									"path": [
										"bookmark",
										"delete"
									]
								}
							},
							"response": []
						}
					],
					"id": "f593233a-41aa-4561-b48f-b5b92f1bc05d"
				}
			],
			"id": "de288ab4-9cf6-4d6a-b5af-4694fb0a766c"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Deprecated APIs",
					"item": [
						{
							"name": "Archive user",
							"id": "ca2f46ef-92ad-4d23-adb7-b847f0e5a387",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{base_url}}users/archive/UR29",
									"host": [
										"{{base_url}}users"
									],
									"path": [
										"archive",
										"UR29"
									]
								},
								"description": "StartFragment\n\nThis API will take GUID as query parameter to delete user"
							},
							"response": [
								{
									"id": "f9edba5a-68c7-49c2-b111-300c1989c34b",
									"name": "Delete user",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/users/delete/CA000039",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"users",
												"delete",
												"CA000039"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 15 Nov 2022 16:15:43 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "96"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 200,\n    \"error\": false,\n    \"messages\": \"USER_DELETED_SUCCESSFULLY\",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Activate user",
							"id": "038db68d-9413-4863-a62f-d84dea064129",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{base_url}}users/activate/UR29",
									"host": [
										"{{base_url}}users"
									],
									"path": [
										"activate",
										"UR29"
									]
								},
								"description": "StartFragment\n\nThis API will take GUID as query parameter to delete user"
							},
							"response": [
								{
									"id": "c7faa2a2-39ed-4332-a4cd-b1aac2c0c2e4",
									"name": "Delete user",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/users/delete/CA000039",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"users",
												"delete",
												"CA000039"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 15 Nov 2022 16:15:43 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "96"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 200,\n    \"error\": false,\n    \"messages\": \"USER_DELETED_SUCCESSFULLY\",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Deactivate user",
							"id": "f4de0306-d59a-4f3d-ae78-4cca271cbc3b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{base_url}}users/deactivate/UR29",
									"host": [
										"{{base_url}}users"
									],
									"path": [
										"deactivate",
										"UR29"
									]
								},
								"description": "StartFragment\n\nThis API will take GUID as query parameter to delete user"
							},
							"response": [
								{
									"id": "e69c0d94-1d2d-4098-8706-dce7c7b62042",
									"name": "Delete user",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/users/delete/CA000039",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"users",
												"delete",
												"CA000039"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 15 Nov 2022 16:15:43 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "96"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 200,\n    \"error\": false,\n    \"messages\": \"USER_DELETED_SUCCESSFULLY\",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Bulk delete users",
							"id": "05fedf86-0571-4aaf-b13f-f955bb7ed756",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "users[0]",
											"value": "UR12",
											"type": "text"
										},
										{
											"key": "users[1]",
											"value": "UR13",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}users/delete",
									"host": [
										"{{base_url}}users"
									],
									"path": [
										"delete"
									]
								},
								"description": "StartFragment\n\nThis API will take GUID as query parameter to delete user"
							},
							"response": [
								{
									"id": "f375d477-7921-4aab-a5eb-c39bd390c8dd",
									"name": "Delete user",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/users/delete/CA000039",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"users",
												"delete",
												"CA000039"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 15 Nov 2022 16:15:43 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "96"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 200,\n    \"error\": false,\n    \"messages\": \"USER_DELETED_SUCCESSFULLY\",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Bulk archive users",
							"id": "429f1426-47b1-4279-ac53-c77a7ece4ec2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "users[0]",
											"value": "UR29",
											"type": "text"
										},
										{
											"key": "users[1]",
											"value": "UR32",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}users/archive",
									"host": [
										"{{base_url}}users"
									],
									"path": [
										"archive"
									]
								},
								"description": "StartFragment\n\nThis API will take GUID as query parameter to delete user"
							},
							"response": [
								{
									"id": "921f03bf-7289-4c3f-990d-06bb93470b19",
									"name": "Delete user",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/users/delete/CA000039",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"users",
												"delete",
												"CA000039"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 15 Nov 2022 16:15:43 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "96"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 200,\n    \"error\": false,\n    \"messages\": \"USER_DELETED_SUCCESSFULLY\",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Bulk activate users",
							"id": "ce002356-0acf-40df-8285-0464c39b1d4e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "users[0]",
											"value": "UR3",
											"type": "text"
										},
										{
											"key": "users[1]",
											"value": "UR2",
											"type": "text"
										},
										{
											"key": "users[2]",
											"value": "UR4",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}users/activate",
									"host": [
										"{{base_url}}users"
									],
									"path": [
										"activate"
									]
								},
								"description": "StartFragment\n\nThis API will take GUID as query parameter to delete user"
							},
							"response": [
								{
									"id": "916d9939-1fa7-4242-967c-361c71977180",
									"name": "Delete user",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/users/delete/CA000039",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"users",
												"delete",
												"CA000039"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 15 Nov 2022 16:15:43 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "96"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 200,\n    \"error\": false,\n    \"messages\": \"USER_DELETED_SUCCESSFULLY\",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Bulk deactivate users",
							"id": "cf348762-928a-4f01-a60f-841fd9c6db85",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "users[0]",
											"value": "UR3",
											"type": "text"
										},
										{
											"key": "users[1]",
											"value": "UR4",
											"type": "text"
										},
										{
											"key": "users[2]",
											"value": "UR2",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}users/deactivate",
									"host": [
										"{{base_url}}users"
									],
									"path": [
										"deactivate"
									]
								},
								"description": "StartFragment\n\nThis API will take GUID as query parameter to delete user"
							},
							"response": [
								{
									"id": "5aa3a381-8c66-4864-95bd-a901b16285c3",
									"name": "Delete user",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/users/delete/CA000039",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"users",
												"delete",
												"CA000039"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 15 Nov 2022 16:15:43 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "96"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 200,\n    \"error\": false,\n    \"messages\": \"USER_DELETED_SUCCESSFULLY\",\n    \"data\": []\n}"
								}
							]
						},
						{
							"name": "Change user role",
							"id": "1aa83fe5-09f9-44ff-9a5a-a0a60bc33bf2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "roles[UR29]",
											"value": "admin",
											"type": "text"
										},
										{
											"key": "roles[UR30]",
											"value": "student",
											"type": "text"
										},
										{
											"key": "created_by",
											"value": "{{admin_guid}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}users/change_role",
									"host": [
										"{{base_url}}users"
									],
									"path": [
										"change_role"
									]
								},
								"description": "StartFragment\n\nThis API will take GUID as query parameter to delete user"
							},
							"response": [
								{
									"id": "3daaa6a6-a891-44eb-870a-35e8c6f1cd1c",
									"name": "Delete user",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://developer1.website/dev/caapis/public/users/delete/CA000039",
											"protocol": "https",
											"host": [
												"developer1",
												"website"
											],
											"path": [
												"dev",
												"caapis",
												"public",
												"users",
												"delete",
												"CA000039"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 15 Nov 2022 16:15:43 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.33"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
										},
										{
											"key": "Cache-control",
											"value": "no-store, max-age=0, no-cache"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Upgrade",
											"value": "h2,h2c"
										},
										{
											"key": "Connection",
											"value": "Upgrade, Keep-Alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "96"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=3, max=500"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 200,\n    \"error\": false,\n    \"messages\": \"USER_DELETED_SUCCESSFULLY\",\n    \"data\": []\n}"
								}
							]
						}
					],
					"id": "ef249f6c-982b-4586-83ba-893c3e9c31f5"
				},
				{
					"name": "My Account",
					"item": [
						{
							"name": "Change password",
							"id": "cd15c520-316c-46c6-9ccc-fdaf89ff8cb6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "password",
											"value": "Test@1234",
											"type": "text"
										},
										{
											"key": "password_confirm",
											"value": "Test@1234",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}users/change_password/UR2",
									"host": [
										"{{base_url}}users"
									],
									"path": [
										"change_password",
										"UR2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate new token",
							"id": "ccf6f095-bf39-4628-a0fe-4f0e7753566f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "device_name",
											"value": "Johns iPhone 13.0",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}users/generate_token",
									"host": [
										"{{base_url}}users"
									],
									"path": [
										"generate_token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update profile",
							"id": "ae847051-a02e-471c-90d1-36796af46aa3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"disabledSystemHeaders": {
									"accept-encoding": true
								}
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "first_name",
											"value": "Asif",
											"type": "text"
										},
										{
											"key": "middle_name",
											"value": "",
											"type": "text"
										},
										{
											"key": "last_name",
											"value": "Aziz",
											"type": "text"
										},
										{
											"key": "email",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "mobile",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}users/update/UR29",
									"host": [
										"{{base_url}}users"
									],
									"path": [
										"update",
										"UR29"
									]
								},
								"description": "This API will take GUID as query parameter to find user"
							},
							"response": []
						}
					],
					"id": "a4c751ba-e992-4037-8c4b-89a2e2430c5c"
				},
				{
					"name": "List All Users",
					"id": "3985ae04-a2b8-4dad-a0ae-50e0e87fc441",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url_dev}}users/list",
							"host": [
								"{{base_url_dev}}users"
							],
							"path": [
								"list"
							]
						},
						"description": "This API will return records of all users with roles and other fields. no parameters required"
					},
					"response": [
						{
							"id": "82a5a348-953e-4ed3-aaa4-cecf7a03a817",
							"name": "List All Users",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://developer1.website/dev/caapis/public/users/list",
									"protocol": "https",
									"host": [
										"developer1",
										"website"
									],
									"path": [
										"dev",
										"caapis",
										"public",
										"users",
										"list"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 01 Dec 2022 06:04:28 GMT"
								},
								{
									"key": "Server",
									"value": "Apache"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/7.4.33"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
								},
								{
									"key": "Cache-control",
									"value": "no-store, max-age=0, no-cache"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Upgrade",
									"value": "h2,h2c"
								},
								{
									"key": "Connection",
									"value": "Upgrade, Keep-Alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Content-Length",
									"value": "880"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=3, max=500"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"USERS_FOUND\",\n    \"payload\": {\n        \"meta\": {\n            \"first_page\": 1,\n            \"last_page\": 2,\n            \"current_page\": 1,\n            \"total_results\": 11,\n            \"num_results\": 10\n        },\n        \"data\": [\n            {\n                \"guid\": \"CA000052\",\n                \"role\": \"teacher\",\n                \"first_name\": \"Test\",\n                \"middle_name\": \"Teacher\",\n                \"last_name\": \"One\",\n                \"user_login\": \"test52\",\n                \"user_email\": \"test@teacher.one\",\n                \"user_mobile\": \"9133543596656\",\n                \"user_activation_key\": \"9a1158154dfa42caddbd0694a4e9bdc8\",\n                \"user_status\": \"1\",\n                \"user_registered\": \"2022-11-29 13:17:45\"\n            },\n            {\n                \"guid\": \"CA000040\",\n                \"role\": \"admin\",\n                \"first_name\": \"Arnold\",\n                \"middle_name\": \"B\",\n                \"last_name\": \"Shwaz\",\n                \"user_login\": \"arnold40\",\n                \"user_email\": \"arnold@gmail.com\",\n                \"user_mobile\": \"9876543219\",\n                \"user_activation_key\": \"d645920e395fedad7bbbed0eca3fe2e0\",\n                \"user_status\": \"1\",\n                \"user_registered\": \"2022-11-15 10:16:16\"\n            },\n            {\n                \"guid\": \"CA000038\",\n                \"role\": \"admin\",\n                \"first_name\": \"Jackie\",\n                \"middle_name\": \"B\",\n                \"last_name\": \"Chan\",\n                \"user_login\": \"jackie38\",\n                \"user_email\": \"jackiechan@gmail.com\",\n                \"user_mobile\": \"9876543221\",\n                \"user_activation_key\": \"a5771bce93e200c36f7cd9dfd0e5deaa\",\n                \"user_status\": \"1\",\n                \"user_registered\": \"2022-11-15 08:01:14\"\n            },\n            {\n                \"guid\": \"CA000037\",\n                \"role\": \"admin\",\n                \"first_name\": \"Arnoldarnoldarnold\",\n                \"middle_name\": \"B\",\n                \"last_name\": \"Shwaznegggggggar\",\n                \"user_login\": \"arnold37\",\n                \"user_email\": \"arnold2@gmail.com\",\n                \"user_mobile\": \"9876543220\",\n                \"user_activation_key\": \"a5bfc9e07964f8dddeb95fc584cd965d\",\n                \"user_status\": \"1\",\n                \"user_registered\": \"2022-11-15 07:58:10\"\n            },\n            {\n                \"guid\": \"CA000033\",\n                \"role\": \"admin\",\n                \"first_name\": \"Will\",\n                \"middle_name\": \"A\",\n                \"last_name\": \"Smith\",\n                \"user_login\": \"will33\",\n                \"user_email\": \"willsmith@gmail.com\",\n                \"user_mobile\": \"9876543217\",\n                \"user_activation_key\": \"182be0c5cdcd5072bb1864cdee4d3d6e\",\n                \"user_status\": \"1\",\n                \"user_registered\": \"2022-11-15 05:17:40\"\n            },\n            {\n                \"guid\": \"CA000032\",\n                \"role\": \"admin\",\n                \"first_name\": \"Bruce\",\n                \"middle_name\": \"A\",\n                \"last_name\": \"Willis\",\n                \"user_login\": \"bruce32\",\n                \"user_email\": \"brucewillis@gmail.com\",\n                \"user_mobile\": \"9876543216\",\n                \"user_activation_key\": \"6364d3f0f495b6ab9dcf8d3b5c6e0b01\",\n                \"user_status\": \"1\",\n                \"user_registered\": \"2022-11-15 05:15:09\"\n            },\n            {\n                \"guid\": \"CA000031\",\n                \"role\": \"admin\",\n                \"first_name\": \"Sylvester\",\n                \"middle_name\": \"A\",\n                \"last_name\": \"Stallon\",\n                \"user_login\": \"sylvester31\",\n                \"user_email\": \"sylvester@gmail.com\",\n                \"user_mobile\": \"9876543215\",\n                \"user_activation_key\": \"c16a5320fa475530d9583c34fd356ef5\",\n                \"user_status\": \"1\",\n                \"user_registered\": \"2022-11-15 05:14:00\"\n            },\n            {\n                \"guid\": \"CA000030\",\n                \"role\": \"admin\",\n                \"first_name\": \"Arnold\",\n                \"middle_name\": \"C\",\n                \"last_name\": \"Shwaz\",\n                \"user_login\": \"ricky30\",\n                \"user_email\": \"arnold91@gmail.com\",\n                \"user_mobile\": \"9876543291\",\n                \"user_activation_key\": \"34173cb38f07f89ddbebc2ac9128303f\",\n                \"user_status\": \"2\",\n                \"user_registered\": \"2022-11-15 05:12:50\"\n            },\n            {\n                \"guid\": \"ADM-3\",\n                \"role\": \"admin\",\n                \"first_name\": \"Jason\",\n                \"middle_name\": \"A\",\n                \"last_name\": \"Statham\",\n                \"user_login\": \"jason15\",\n                \"user_email\": \"jasonstatham@gmail.com\",\n                \"user_mobile\": \"9876543213\",\n                \"user_activation_key\": \"9bf31c7ff062936a96d3c8bd1f8f2ff3\",\n                \"user_status\": \"1\",\n                \"user_registered\": \"2022-11-15 03:42:59\"\n            },\n            {\n                \"guid\": \"ADM-2\",\n                \"role\": \"admin\",\n                \"first_name\": \"John\",\n                \"middle_name\": \"A\",\n                \"last_name\": \"Rambo\",\n                \"user_login\": \"john14\",\n                \"user_email\": \"johnrambo2@gmail.com\",\n                \"user_mobile\": \"9876543212\",\n                \"user_activation_key\": \"aab3238922bcc25a6f606eb525ffdc56\",\n                \"user_status\": \"1\",\n                \"user_registered\": \"2022-11-15 03:40:48\"\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Search and filter users",
					"id": "952b50a9-7f61-45a3-bdcc-32dffb0a197a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "results_per_page",
									"value": "3",
									"type": "text",
									"disabled": true
								},
								{
									"key": "search",
									"value": "",
									"description": "Search text",
									"type": "text",
									"disabled": true
								},
								{
									"key": "page",
									"value": "4",
									"description": "Page number for result",
									"type": "text",
									"disabled": true
								},
								{
									"key": "status",
									"value": "1",
									"description": "[0, 1, 2, 3]. 0=Inactive, 1=Active, 2=Pending, 3=Archived ",
									"type": "text"
								},
								{
									"key": "role",
									"value": "student",
									"description": "admin, instructor, student",
									"type": "text"
								},
								{
									"key": "order_by",
									"value": "newest_first",
									"description": "[newest_first, newest_last, last_name_asc, last_name_desc, first_name_desc, first_name_asc]",
									"type": "text",
									"disabled": true
								},
								{
									"key": "deleted",
									"value": "",
									"description": "[0,1] \n0 = Find those user accounts which are not in recycle bin.\n1 = Find those accounts which are in trash\n",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{base_url_dev}}users/list",
							"host": [
								"{{base_url_dev}}users"
							],
							"path": [
								"list"
							]
						},
						"description": "This API will return a list of all users based on the search criteria. As input it takes following form parameters:\n\n- **results_per_page** - records to be returned. Used for pagination. Default value is 5\n- **search** - text to be searched. Used for a full text search in fields First name, Middle name, Last name, User mobile and User email.\n- **page** - page number for pagination. Default value 1.\n- **order_by** - accepted values\n    - newest_first\n    - newest_last\n    - last_name_asc\n    - last_name_desc\n    - first_name_desc\n    - first_name_asc - (default)\n- **role** - default value is empty. accepted values for role are\n    - superadmin,\n    - admin\n    - student,\n    - parent,\n    - instructor\n- **status** - default value is 1. accepted values are\n    - 0 = inactive users\n    - 1 = active users"
					},
					"response": []
				},
				{
					"name": "Create new user",
					"id": "8701ffdd-87b6-439e-8ffb-8281fad7492d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {
							"accept-encoding": true
						}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "admin",
									"description": "Required. Will contain the mobile number of user",
									"type": "text",
									"disabled": true
								},
								{
									"key": "role",
									"value": "admin",
									"description": "Required. Accepted values = superadmin, admin, instructor, student, parent",
									"type": "text"
								},
								{
									"key": "status",
									"value": "1",
									"description": "Optional. 0=Inactive, 1=Active. Default is 1",
									"type": "text"
								},
								{
									"key": "email",
									"value": "asifaziz@inovexiasoftware.com",
									"description": "Required if set in backend.",
									"type": "text"
								},
								{
									"key": "mobile",
									"value": "919511118896",
									"description": "Required if set in backend. Will contain the mobile number of user",
									"type": "text"
								},
								{
									"key": "first_name",
									"value": "Asif",
									"type": "text"
								},
								{
									"key": "middle_name",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "last_name",
									"value": "Aziz",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url_dev}}users/add",
							"host": [
								"{{base_url_dev}}users"
							],
							"path": [
								"add"
							]
						}
					},
					"response": [
						{
							"id": "21ce3b65-72a4-4665-a47c-14ffdf088514",
							"name": "Add user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "hjhjh",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "first_name",
											"value": "Arnold",
											"type": "text"
										},
										{
											"key": "middle_name",
											"value": "B",
											"type": "text"
										},
										{
											"key": "last_name",
											"value": "Shwaz",
											"type": "text"
										},
										{
											"key": "mobile",
											"value": "9876543219",
											"type": "text"
										},
										{
											"key": "email",
											"value": "arnold@gmail.com",
											"type": "text"
										},
										{
											"key": "role",
											"value": "admin",
											"type": "text"
										},
										{
											"key": "status",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://developer1.website/dev/caapis/public/users/add",
									"protocol": "https",
									"host": [
										"developer1",
										"website"
									],
									"path": [
										"dev",
										"caapis",
										"public",
										"users",
										"add"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 15 Nov 2022 16:15:26 GMT"
								},
								{
									"key": "Server",
									"value": "Apache"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/7.4.33"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
								},
								{
									"key": "Cache-control",
									"value": "no-store, max-age=0, no-cache"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Upgrade",
									"value": "h2,h2c"
								},
								{
									"key": "Connection",
									"value": "Upgrade, Keep-Alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=3, max=500"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": 500,\n    \"error\": true,\n    \"message\": {\n        \"mobile\": \"MOBILE_ALREADY_REGISTERED\",\n        \"email\": \"EMAIL_ALREADY_REGISTERED\"\n    },\n    \"data\": []\n}"
						},
						{
							"id": "058ba7a8-2618-427f-8cc1-e10755d7ba2e",
							"name": "Add user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "hjhjh",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "first_name",
											"value": "Arnold",
											"type": "text"
										},
										{
											"key": "middle_name",
											"value": "B",
											"type": "text"
										},
										{
											"key": "last_name",
											"value": "Shwaz",
											"type": "text"
										},
										{
											"key": "mobile",
											"value": "9876543219",
											"type": "text"
										},
										{
											"key": "email",
											"value": "arnold@gmail.com",
											"type": "text"
										},
										{
											"key": "role",
											"value": "admin",
											"type": "text"
										},
										{
											"key": "status",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://developer1.website/dev/caapis/public/users/add",
									"protocol": "https",
									"host": [
										"developer1",
										"website"
									],
									"path": [
										"dev",
										"caapis",
										"public",
										"users",
										"add"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 15 Nov 2022 16:16:15 GMT"
								},
								{
									"key": "Server",
									"value": "Apache"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/7.4.33"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
								},
								{
									"key": "Cache-control",
									"value": "no-store, max-age=0, no-cache"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Upgrade",
									"value": "h2,h2c"
								},
								{
									"key": "Connection",
									"value": "Upgrade, Keep-Alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=3, max=500"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": 200,\n    \"error\": false,\n    \"message\": \"USER_ADDED_SUCCESSFULLY\",\n    \"data\": [\n        \"CA000040\"\n    ]\n}"
						}
					]
				},
				{
					"name": "Update user",
					"id": "78bbea30-37bf-4008-8a92-1b70c18eacff",
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {
							"accept-encoding": true
						}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "first_name",
									"value": "Rohit",
									"type": "text"
								},
								{
									"key": "middle_name",
									"value": "",
									"type": "text"
								},
								{
									"key": "last_name",
									"value": "Sharma",
									"type": "text"
								},
								{
									"key": "mobile",
									"value": "9189654123622",
									"type": "text"
								},
								{
									"key": "email",
									"value": "gdhshs@aaa.com",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url_dev}}users/update/UR2",
							"host": [
								"{{base_url_dev}}users"
							],
							"path": [
								"update",
								"UR2"
							]
						},
						"description": "This API will take GUID as query parameter to find user"
					},
					"response": []
				},
				{
					"name": "View user",
					"id": "0123adc3-76e6-4962-b573-5cbc9af92aa0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url_dev}}users/view/ur4",
							"host": [
								"{{base_url_dev}}users"
							],
							"path": [
								"view",
								"ur4"
							]
						},
						"description": "StartFragment\n\nThis API will take GUID as query parameter to find user"
					},
					"response": []
				},
				{
					"name": "Change users status",
					"id": "a12b8528-45ee-4bb5-b40f-68be69277b33",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "users[0]",
									"value": "UR4",
									"type": "text",
									"description": "Required"
								},
								{
									"key": "users[1]",
									"value": "UR2",
									"type": "text"
								},
								{
									"key": "users[2]",
									"value": "UR7",
									"type": "text"
								},
								{
									"key": "status",
									"value": "1",
									"type": "text",
									"description": "Required. [0=Inactive, 1=Active, 2=Pending, 3=Archive]"
								},
								{
									"key": "created_by",
									"value": "UR1",
									"type": "text",
									"description": "Required"
								}
							]
						},
						"url": {
							"raw": "{{base_url_dev}}users/change_status",
							"host": [
								"{{base_url_dev}}users"
							],
							"path": [
								"change_status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trash users/Send to recycle bin",
					"id": "0a3c9f69-ea43-4ee6-84b3-13b527a5637d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "users[0]",
									"value": "UR20",
									"type": "text"
								},
								{
									"key": "users[1]",
									"value": "UR30",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url_dev}}users/trash",
							"host": [
								"{{base_url_dev}}users"
							],
							"path": [
								"trash"
							]
						},
						"description": "StartFragment\n\nThis API will take GUID as query parameter to delete user"
					},
					"response": [
						{
							"id": "c91719d1-567f-4fe4-9941-4644b501bd73",
							"name": "Delete user",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://developer1.website/dev/caapis/public/users/delete/CA000039",
									"protocol": "https",
									"host": [
										"developer1",
										"website"
									],
									"path": [
										"dev",
										"caapis",
										"public",
										"users",
										"delete",
										"CA000039"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 15 Nov 2022 16:15:43 GMT"
								},
								{
									"key": "Server",
									"value": "Apache"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/7.4.33"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
								},
								{
									"key": "Cache-control",
									"value": "no-store, max-age=0, no-cache"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Upgrade",
									"value": "h2,h2c"
								},
								{
									"key": "Connection",
									"value": "Upgrade, Keep-Alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Content-Length",
									"value": "96"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=3, max=500"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": 200,\n    \"error\": false,\n    \"messages\": \"USER_DELETED_SUCCESSFULLY\",\n    \"data\": []\n}"
						}
					]
				},
				{
					"name": "Permanentaly delete users",
					"id": "a4aff18a-0432-449e-bb71-9232029b734c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "users[0]",
									"value": "UR20",
									"type": "text"
								},
								{
									"key": "users[1]",
									"value": "UR30",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url_dev}}users/delete/UR29",
							"host": [
								"{{base_url_dev}}users"
							],
							"path": [
								"delete",
								"UR29"
							]
						},
						"description": "StartFragment\n\nThis API will take GUID as query parameter to delete user"
					},
					"response": [
						{
							"id": "96908ea9-4ee2-4a4b-a1b5-22ee725c5ea3",
							"name": "Delete user",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://developer1.website/dev/caapis/public/users/delete/CA000039",
									"protocol": "https",
									"host": [
										"developer1",
										"website"
									],
									"path": [
										"dev",
										"caapis",
										"public",
										"users",
										"delete",
										"CA000039"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 15 Nov 2022 16:15:43 GMT"
								},
								{
									"key": "Server",
									"value": "Apache"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/7.4.33"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "X-API-KEY, Origin,X-Requested-With, Content-Type, Accept, Access-Control-Requested-Method, Authorization"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, OPTIONS, PATCH, PUT, DELETE"
								},
								{
									"key": "Cache-control",
									"value": "no-store, max-age=0, no-cache"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Upgrade",
									"value": "h2,h2c"
								},
								{
									"key": "Connection",
									"value": "Upgrade, Keep-Alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Content-Length",
									"value": "96"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=3, max=500"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": 200,\n    \"error\": false,\n    \"messages\": \"USER_DELETED_SUCCESSFULLY\",\n    \"data\": []\n}"
						}
					]
				}
			],
			"id": "5ba3cdcf-6e2f-41aa-a74f-8af594fcd5ae"
		},
		{
			"name": "Settings",
			"item": [
				{
					"name": "Registration",
					"item": [
						{
							"name": "Save common settings",
							"id": "ad88205c-195a-4725-8a46-3ec66e71421b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "allow_user_registration",
											"value": "true",
											"description": "Required. [true or false]. Default = true",
											"type": "text"
										},
										{
											"key": "default_user_role",
											"value": "student",
											"description": "Required. Accepted values [student, admin, teacher] (or any other roles created/defined in admin user role api ",
											"type": "text"
										},
										{
											"key": "auto_approve_user",
											"value": "false",
											"description": "Required. Accepted values [true, false]",
											"type": "text"
										},
										{
											"key": "auto_generate_username",
											"value": "true",
											"description": "Required. [true, false]. Default true",
											"type": "text"
										},
										{
											"key": "created_by",
											"value": "{{admin_guid}}",
											"description": "Required",
											"type": "text"
										},
										{
											"key": "email_verification_required",
											"value": "true",
											"description": "Required",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url_dev}}settings/registration/common",
									"host": [
										"{{base_url_dev}}settings"
									],
									"path": [
										"registration",
										"common"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get common settings",
							"id": "8ec76024-33d7-4164-be32-a45470ac88e8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}settings/registration/common",
									"host": [
										"{{base_url}}settings"
									],
									"path": [
										"registration",
										"common"
									]
								}
							},
							"response": []
						},
						{
							"name": "Required fields for registration",
							"id": "d04c3026-7816-42fb-b04d-0e5c4d536cdb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "fields[mobile]",
											"value": "true",
											"description": "Required. [true or false]",
											"type": "text"
										},
										{
											"key": "fields[email]",
											"value": "true",
											"description": "Required. [true or false]",
											"type": "text"
										},
										{
											"key": "created_by",
											"value": "{{admin_guid}}",
											"type": "text",
											"description": "Required"
										}
									]
								},
								"url": {
									"raw": "{{base_url_dev}}settings/registration/valid_fields",
									"host": [
										"{{base_url_dev}}settings"
									],
									"path": [
										"registration",
										"valid_fields"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get required fields",
							"id": "a9198147-0e2b-4b75-808f-4cbb6087e6ed",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}settings/registration/valid_fields",
									"host": [
										"{{base_url}}settings"
									],
									"path": [
										"registration",
										"valid_fields"
									]
								}
							},
							"response": []
						}
					],
					"id": "8bbfb767-2d75-49ab-ab95-57fd9241030e"
				},
				{
					"name": "General",
					"item": [
						{
							"name": "Save theme settings",
							"id": "a099ce38-00a7-4a53-bf7f-3c23dbd9d9fc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "theme_color",
											"value": "#f5f5f5",
											"description": "Required. [Color code. Any string allowed]",
											"type": "text"
										},
										{
											"key": "created_by",
											"value": "{{admin_guid}}",
											"description": "Required.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url_dev}}settings/general/save_theme",
									"host": [
										"{{base_url_dev}}settings"
									],
									"path": [
										"general",
										"save_theme"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get theme settings",
							"id": "62f45ab3-a3d2-4069-ac06-7edc46bd0dee",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url_dev}}settings/general/get_theme",
									"host": [
										"{{base_url_dev}}settings"
									],
									"path": [
										"general",
										"get_theme"
									]
								}
							},
							"response": []
						}
					],
					"id": "1124ec73-aebf-4da0-b45b-8c0846785976"
				},
				{
					"name": "Login",
					"item": [
						{
							"name": "Save login page general settings",
							"id": "367ac814-133d-4f53-af48-79933298a19e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "single_device_login_only",
											"value": "false",
											"description": "Required. true or false",
											"type": "text"
										},
										{
											"key": "created_by",
											"value": "UR1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/settings/login/common",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"settings",
										"login",
										"common"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get login page general settings",
							"id": "ea931d28-1360-4e1a-aca5-b71e27fb45a1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "single_device_login_only",
											"value": "false",
											"type": "text"
										},
										{
											"key": "created_by",
											"value": "{{admin_guid}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/settings/login/common",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"settings",
										"login",
										"common"
									]
								}
							},
							"response": []
						}
					],
					"id": "347b93c0-1bdc-4b53-a4e8-466a207ef2be"
				}
			],
			"id": "73a004e9-eae8-43ab-ac30-dc0d9a8d4d81"
		},
		{
			"name": "Meetings",
			"item": [
				{
					"name": "Zoom",
					"item": [
						{
							"name": "List meetings",
							"id": "90f4bcc1-fc3b-426b-8417-9ed23266fb97",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "result_per_page",
											"value": "15",
											"type": "text"
										},
										{
											"key": "page",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url_dev}}zoom/list",
									"host": [
										"{{base_url_dev}}zoom"
									],
									"path": [
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create meeting",
							"id": "29ce465d-e85c-435e-b1ac-70611ab918f9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "New meeting",
											"description": "Required",
											"type": "text"
										},
										{
											"key": "details",
											"value": "Asif Aziz is inviting you to a scheduled Zoom meeting.\n\nTopic: Cosmic meeting \nTime: Apr 27, 2023 05:00 PM Mumbai, Kolkata, New Delhi\n\nJoin Zoom Meeting\nhttps://us04web.zoom.us/j/74334468099?pwd=sh0MrWO5GZQ23VTLiY94Y4bmbOC2SD.1\n\nMeeting ID: 743 3446 8099\nPasscode: ex5U9J",
											"description": "Required",
											"type": "text"
										},
										{
											"key": "created_by",
											"value": "{{admin_guid}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url_dev}}zoom/create",
									"host": [
										"{{base_url_dev}}zoom"
									],
									"path": [
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Share meeting",
							"id": "3eeed957-dd6e-4c92-b214-a718986070bd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "users[0]",
											"value": "UR27",
											"type": "text"
										},
										{
											"key": "users[1]",
											"value": "UR29",
											"type": "text",
											"disabled": true
										},
										{
											"key": "users[2]",
											"value": "UR30",
											"type": "text",
											"disabled": true
										},
										{
											"key": "users[3]",
											"value": "UR32",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url_dev}}zoom/share/odWpiMQh",
									"host": [
										"{{base_url_dev}}zoom"
									],
									"path": [
										"share",
										"odWpiMQh"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit meeting",
							"id": "906b6a35-19b1-4bbc-8bb8-bd3e951381f4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "details",
											"value": "Admin is inviting you to a scheduled Zoom meeting.\n\nTopic: Asif Aziz's Zoom Meeting\nTime: This is a recurring meeting Meet anytime\n\nJoin Zoom Meeting\nhttps://us04web.zoom.us/j/71892359625?pwd=r1Si5xU1avkrN1KZg7sczAsLuxGbLa.1\n\nMeeting ID: 718 9235 9625\nPasscode: nrXZ0Y\n\n",
											"type": "text"
										},
										{
											"key": "created_by",
											"value": "{{admin_guid}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url_dev}}zoom/create/YAd3GFQT",
									"host": [
										"{{base_url_dev}}zoom"
									],
									"path": [
										"create",
										"YAd3GFQT"
									]
								}
							},
							"response": []
						},
						{
							"name": "View meeting",
							"id": "a6747b13-7eb4-4ea0-9152-9ca491eb3b6c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "details",
											"value": "Asif Aziz is inviting you to a scheduled Zoom meeting.\n\nTopic: Asif Aziz's Zoom Meeting\nTime: This is a recurring meeting Meet anytime\n\nJoin Zoom Meeting\nhttps://us04web.zoom.us/j/71892359625?pwd=r1Si5xU1avkrN1KZg7sczAsLuxGbLa.1\n\nMeeting ID: 718 9235 9625\nPasscode: nrXZ0Y\n\n",
											"type": "text"
										},
										{
											"key": "created_by",
											"value": "{{admin_guid}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url_dev}}zoom/view/YAd3GFQT",
									"host": [
										"{{base_url_dev}}zoom"
									],
									"path": [
										"view",
										"YAd3GFQT"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete meeting",
							"id": "499bd3e5-6ee0-49a6-9842-d364d148d8c6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "details",
											"value": "Asif Aziz is inviting you to a scheduled Zoom meeting.\n\nTopic: Asif Aziz's Zoom Meeting\nTime: This is a recurring meeting Meet anytime\n\nJoin Zoom Meeting\nhttps://us04web.zoom.us/j/71892359625?pwd=r1Si5xU1avkrN1KZg7sczAsLuxGbLa.1\n\nMeeting ID: 718 9235 9625\nPasscode: nrXZ0Y\n\n",
											"type": "text"
										},
										{
											"key": "created_by",
											"value": "{{admin_guid}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url_dev}}zoom/delete/2KAIeWyf",
									"host": [
										"{{base_url_dev}}zoom"
									],
									"path": [
										"delete",
										"2KAIeWyf"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get meeting users",
							"id": "be46ec0f-7d05-460d-97b2-85b7bdf74ed3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url_dev}}zoom/get_users/odWpiMQh",
									"host": [
										"{{base_url_dev}}zoom"
									],
									"path": [
										"get_users",
										"odWpiMQh"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get user meetings",
							"id": "cbf347f0-9cad-482b-8aab-d6d45455a4fb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url_dev}}zoom/get_meetings/{{admin_guid}}",
									"host": [
										"{{base_url_dev}}zoom"
									],
									"path": [
										"get_meetings",
										"{{admin_guid}}"
									]
								}
							},
							"response": []
						}
					],
					"id": "88d48d23-bcd3-462c-adea-ec264fb1c55d"
				}
			],
			"id": "a44bfc10-dcbe-4822-9415-2e241b233e46"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "9e1cde3c-cf34-4cb2-92f9-0ed31dc9da85",
				"type": "text/javascript",
				"exec": [
					"pm.request.headers.add({",
					"    key: \"Network\",",
					"    value: pm.environment.get('network_id')",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "74e8b9d4-7f39-443b-9333-fd55ca550339",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}